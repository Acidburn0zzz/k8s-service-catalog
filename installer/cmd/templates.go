// Code generated by go-bindata.
// sources:
// templates/api-registration.yaml
// templates/api-registration.yaml.tmpl
// templates/apiserver-deployment.yaml
// templates/ca_config.json
// templates/ca_csr.json.tmpl
// templates/controller-manager-deployment.yaml
// templates/etcd-svc.yaml
// templates/etcd.yaml
// templates/gencert_config.json.tmpl
// templates/namespace.yaml
// templates/rbac.yaml
// templates/service-accounts.yaml
// templates/service.yaml
// templates/tls-cert-secret.yaml
// templates/tls-cert-secret.yaml.tmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesApiRegistrationYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x56\xcd\x92\xa3\x3a\xd2\xdd\xfb\x29\x14\x5d\x9b\xef\x8b\xe8\x5b\xcd\x4f\xb9\x67\x5c\xb3\x2a\x6c\x64\x1b\xdb\x72\x21\x21\x81\xd9\x09\xa4\x36\x32\x02\x54\x80\x7f\x9f\x7e\x02\x57\xd5\x9d\xdb\x71\xef\xac\x66\x22\x66\xd3\xde\x39\x4f\x66\x72\x94\x4a\x38\xe7\xe1\x3f\xfe\x8d\x1e\xc0\xb4\x31\xd7\x56\xed\x8b\x1e\x38\x96\xfd\x37\x30\x6f\x9a\xbd\x96\x60\x59\xe7\x8f\xa3\x01\x5e\xab\x5c\xd6\x9d\x14\xe0\x58\x0b\xd9\x82\xbe\x90\xe0\xc5\xf0\xbc\x90\x9f\xc8\x57\xc0\x64\xdb\xa9\xa6\x06\xce\xa3\x05\xfe\x6f\x48\xf8\xf2\x01\x7d\xf9\xff\x7f\x8c\x1e\xc0\xb5\x39\x82\x8a\x5f\x41\xdd\xf4\xe0\xd8\x49\xd0\x17\xaa\x03\x3f\x94\x96\x40\x5e\x72\x69\x7a\xa0\x6a\x90\x37\x95\xd1\x8a\xd7\xb9\x04\x67\xd5\x17\xf7\xc7\x7c\x34\x79\x1c\x3d\x80\xdd\x47\x8b\x26\xeb\xb9\xaa\x01\x07\x79\x63\xae\xa0\xf9\xf1\xc7\x3c\xc0\xfb\x3b\xe1\xe1\x57\xf4\xbd\xe9\x9e\xbf\x7d\x3b\x9f\xcf\x8f\xfc\xce\xf6\xb1\x69\xf7\xdf\xf4\x7b\x66\xf7\x6d\xbd\x9c\xfa\x88\xf8\xbf\x39\x8f\xd6\xbd\x86\xd6\x5a\x76\x1d\x68\xe5\xdb\x51\xb5\x52\x80\xec\x0a\xb8\x31\x5a\xe5\x3c\xd3\x12\x68\x7e\x06\x4d\x0b\xf8\xbe\x95\x52\x80\xbe\x19\x08\x9f\x5b\xd5\xab\x7a\xff\x15\x74\xcd\x8f\xfe\xcc\x5b\x39\x7a\x00\x42\x75\x7d\xab\xb2\x63\xff\xd3\xb4\x3e\xe9\xa9\xee\xa7\x84\xa6\x06\xbc\x06\x5f\x5e\x08\x58\x92\x2f\xc0\x7b\x21\x4b\xf2\x75\xf4\x00\xe2\x65\xb4\xd8\xd2\x08\xc4\x2f\x18\xbf\xa0\x68\xe9\x13\xb0\xc5\x60\xba\x45\xb3\x65\xb4\xdc\x22\x02\xb6\x10\xbc\xa0\x1d\x58\x2d\xd1\xec\x2b\x90\xaa\x2f\x64\x0b\xe4\xc5\xb4\x03\xff\xa6\x05\x6a\x98\xa3\x14\xc3\xd0\x88\x94\x3f\x11\xf8\xd1\xbc\x13\xea\x8c\xcc\xd5\x0f\x95\x03\xcd\xeb\xfd\x91\xef\x25\xd8\x37\x27\xd9\xd6\xaa\xde\x03\x23\xdb\x4a\x75\xc3\x6d\x76\x80\xd7\x62\xf4\x00\xb4\xaa\x54\xcf\xfb\x7b\xe4\x4f\x87\x7a\x5f\x91\x68\xd8\x89\xd7\xe5\x30\x99\x56\xee\x55\xd7\xcb\x76\x28\x1e\x68\x35\xdd\x1f\x2e\xb4\xe2\xaa\xfe\xc6\xf7\xfb\x56\xee\xf9\x30\x82\xa1\xa6\x93\xed\x49\xb6\x03\xdd\x9c\x7b\xc7\x5a\x68\x09\xaa\x63\xd7\x83\x4c\x02\x0e\x7a\x59\x19\x7d\x4f\x3d\xf1\x56\x0d\x77\xf1\xf5\xde\x58\xd5\x9d\x6c\x87\xb0\xb8\xd6\xbc\x52\x39\xd7\xfa\xfa\xb1\xad\xc4\xea\xd7\xc4\x9e\x62\x2a\x82\x48\x79\x33\xcc\x02\x4a\x68\x1a\x84\x16\xa4\xf8\x8e\x59\xfd\xb4\xb4\x03\x42\x71\x89\x7d\x34\x0b\xe3\xcb\x38\xb5\xa0\x4b\x68\xe0\xa5\x96\x66\x71\xa9\x21\x2a\x8b\x88\xd2\xc9\x21\x5b\x78\x37\x12\x1b\x95\x1f\x30\x44\x4e\xee\x46\x89\xb1\x42\xdb\x60\x61\x61\x1c\x53\xb3\xce\x6c\x13\xf0\x45\x7a\x88\x4a\x88\x31\x3d\xaf\x42\x0d\x3d\x61\xb3\x37\x4c\x2f\x28\x8c\xfb\x45\x18\x41\x86\x69\xd0\x44\x14\xc5\xac\xb4\x9f\x70\x62\x3c\x5a\x06\x75\xa4\xd3\x69\x18\x0b\x1a\x3a\xfd\x96\xcf\x83\x45\x36\xb7\xd5\xc6\x32\xf6\x8e\x09\x28\x7d\x46\x43\xe6\x4d\x53\x6b\x1c\x87\x25\x3c\xb0\x17\x33\x23\xfe\xb8\xd9\x55\x7a\x9a\xc7\xcb\x5b\x54\x5d\x10\x8d\x3c\x37\x74\x45\x8a\x61\x8a\x29\xed\xa1\xb0\x83\x6b\x0a\xc5\x2a\xf3\x6d\x2c\x5c\x31\x4b\x6d\xed\x33\x0d\x71\xe4\x33\x37\xd2\x45\xbc\x89\x91\x4b\xe6\xc5\x21\x2a\x6d\xba\x73\xc5\x2b\xf3\xe9\x79\x5a\xda\x6f\x61\x22\x10\x2f\xa1\xcb\x9c\x3b\xf6\x46\x92\x01\x63\xdf\xa3\xd8\x78\xc2\xba\xe3\x09\x2f\x83\x28\x62\xf0\x26\x2c\x84\x63\x8a\x63\xca\xe0\x02\x27\x62\xc5\x34\xfb\x8e\x19\x46\x61\xc9\x3e\xce\x89\xa6\x11\xed\x56\x34\x0a\xe6\xb9\x03\x93\xb8\x4e\x0f\x59\xc4\xce\x31\xc3\x90\x96\xb6\xb7\xf5\x85\xb7\x61\x0c\x86\x75\x81\x48\xbc\xb9\xe2\x9a\x05\xd8\xf5\x9c\xdd\x2d\x60\xd2\xc7\x34\xa4\x97\xcf\x33\x9f\x98\x1f\x2c\xc4\x0c\xa6\x19\x63\x4f\xd8\xc7\x1e\x39\x9b\x4f\xec\xc6\x7c\xff\x92\xc2\x22\x96\x25\x9a\x85\x0c\x05\x7f\x7d\x17\xc1\x94\x52\xe8\xa7\x8e\x80\xd4\x87\x7e\x68\x21\x8f\xc6\x93\xd9\xf0\x3f\x2c\xe1\x1a\xcf\x11\x89\x22\x36\x9b\xaa\xc9\x77\x36\x43\xa7\xf5\x75\x72\xdb\xc6\xe1\x13\x83\x28\x21\xd5\x04\x11\x5b\x4c\xb1\x85\xd3\xd4\x5a\xba\xcc\xd5\x67\x52\x4e\xcc\x96\xa6\x65\x66\xa7\x3a\xa4\x85\xa2\x0e\x5a\xe1\xd2\x8e\x36\x8e\x1d\x66\xd6\xd3\x39\xaf\x84\x21\x1a\xdd\xd6\xb6\xdf\x0a\xda\xad\xf8\x8d\x69\x0e\x0b\x47\xc4\x86\x22\x9a\x6e\xa8\xbb\xb1\x53\x8d\xa3\x98\x06\x31\x82\xc6\xcb\xe8\xe4\xc8\x6c\xb6\xce\x0f\x70\x4d\x1d\xeb\x8c\x60\x78\x46\x07\xb1\xd8\xce\xd3\x98\xc4\x0c\xa7\x87\xd4\xe5\xd0\x68\x56\xe2\x9d\x2c\xc7\x4f\x68\x3a\x39\xa4\x2f\x66\x43\x22\x06\xc5\xdc\x7e\x4a\x67\xde\x22\x73\x6c\x2c\x4b\xff\x16\x56\x05\xdb\x39\x08\x62\xdf\x8c\x43\x8a\x96\x94\xe9\x2e\xbb\x95\x67\x1a\x07\x34\x64\x50\x47\x1a\x73\x49\xd3\xe9\xce\x65\x6f\x28\xd6\x63\x02\xcd\x2a\xac\x0b\x9e\x2e\x68\xcb\xae\xfd\x6c\x5a\x23\xb5\x73\xc6\x3a\x65\xa9\x11\x31\xc3\x84\xe6\x63\x56\x9e\xad\x88\x4c\xce\x34\xd1\xdf\x99\x65\x2f\x37\x16\xee\x50\x85\x52\xba\xc0\x3a\xd2\x86\x6e\x12\xc1\xb1\xf3\xf4\x24\xd8\xfe\xb2\x72\xd2\x19\xf2\xbb\xeb\xee\x26\xe0\x8e\xa5\x6f\xb1\x9a\x78\x71\x5c\xae\x64\x39\x26\xf9\x0d\x6e\x71\xd9\x3d\x89\xd9\xf2\x69\x33\xdb\x9f\x99\xa6\x2d\x9b\x63\x2f\xa2\xec\xc4\x7c\x3b\xa4\x3a\x78\xdd\xdd\x3c\x77\x17\x97\xe7\x28\xa6\x57\xee\x40\xc5\x2b\x9b\xe5\xd5\xe5\x0d\x25\xc5\x25\x2c\xd3\x35\xa5\xfa\x14\x39\xa8\x46\x09\x5e\x65\x2f\xe6\xc6\x16\xfb\xf3\xa6\xd4\xdd\xe6\x50\xbc\x11\x0d\x43\x39\xef\x67\x61\x22\x60\x48\x61\x11\x95\x08\x61\x0a\x5d\x3c\xbf\xbf\x1b\x64\x03\x3d\x8f\xd2\xfd\x29\x1c\x76\xc2\x87\x35\xa6\x02\x85\x51\x71\xdf\xd7\xd4\x67\x2e\xa6\xcb\x93\xb0\xe1\x7c\x5a\xda\x5e\x34\xbc\xff\x87\xc2\x25\x10\xbe\xd7\xfa\x93\x69\xa8\x35\xc4\xa5\xbe\xc5\x0c\xee\x68\x52\x44\x99\x75\xf1\xe3\x45\xe0\xef\x0e\x81\x46\xa4\xf7\x84\x9a\x2c\x48\xb5\xb4\x33\x6a\x7b\x1b\x5f\xcc\xa8\x0b\x17\xd4\xd2\x6a\x63\x61\x8c\xe9\x72\x15\xba\x82\x85\xd4\xb7\x86\x6f\x0b\xa5\x70\x9c\x6a\xd1\x60\xff\xe2\xe6\x4e\x5f\x91\xb9\x7f\x22\x8e\xf6\x33\x6a\xbe\xa3\x5a\x78\x22\xd2\x8b\x2d\xd5\xaf\x08\xea\x43\xee\x8c\xa7\x9b\x04\xae\x65\x89\xb6\x29\xf4\xa6\x38\xee\x7d\x4e\x91\xb3\x63\x70\x11\xee\x8d\x4b\xae\x13\x8e\x63\xbc\x5c\xdd\x8a\x0a\x25\xc2\x8b\xab\xa5\x4b\x12\xbc\x8a\xcb\xfc\xb6\xb2\xc5\x86\x3b\xa6\xe4\xd4\xc4\x3b\x0b\x12\xa1\x83\x43\x3c\x83\x3c\x8c\xf3\x96\xdf\xd8\x1b\x71\xc6\xc7\x68\x9e\x5f\x98\xc6\x8c\xdd\x3c\xb3\xb6\x2e\xae\x28\xed\xc3\xb4\x14\x63\x19\x07\x08\x93\xde\x11\xf3\x9e\xc4\x89\x21\x04\x8a\x26\x4f\xbc\x79\x78\x80\xdb\x8d\x5b\x2c\xd3\xf2\x52\x0b\x18\x5a\xe1\x01\x2d\xb3\xc4\xf3\xf3\x83\xb7\x26\x65\x90\x60\x67\x69\x63\xdb\xf8\x38\x62\x70\xe7\x8c\x39\x77\x82\x19\x76\x77\x2d\xaf\xf7\xab\xd5\xf0\x9d\x9a\x4f\x82\x1d\x35\x61\x34\x4f\xd7\xd4\x29\x5e\x69\x04\x7b\x96\x88\x2d\xd3\xd8\x64\x09\x8c\xf1\x22\x48\xd3\xda\xab\xc5\x81\x5d\xb8\x1b\x8e\xf3\x3a\x20\x34\x49\xcf\x91\x9d\xb7\xd8\x87\x81\x28\x4d\x4c\x6c\x68\xa1\x7a\xf9\x94\x1d\xf0\x96\xbd\x34\x2e\xb5\x82\x69\x4e\xc7\x1c\x39\x38\x5d\x5b\x22\xca\xec\xcd\x19\x25\x1e\x46\x37\xaf\x63\x8c\x5d\x76\x56\x7e\xca\xb4\x9e\xe7\x14\x92\x4d\xed\xcd\xa9\xeb\xc5\x1b\x67\x8c\x22\xd7\xbf\x90\x99\xa6\x39\xf3\x16\xc4\xef\x43\x14\x43\xba\x71\x5f\xc6\x79\x55\x04\x53\x1d\x9e\xe4\x02\x1f\xc4\x8c\x15\x3b\x9b\x2d\x62\x86\x0f\xe4\x86\xf9\xca\x4d\xc9\x66\x6e\xbe\x33\x47\xbf\x6e\x13\x44\xa8\xc5\x0e\x53\xf5\xae\x25\x98\x8e\xfd\xa5\x8f\x20\xd5\x38\xc0\xa5\x9e\x85\x0c\xc3\x77\x0d\xb2\x56\xcf\x20\xd7\x4a\xd6\x3d\xc8\x65\xdb\x0f\x82\xcb\x7b\x09\xf8\xb1\x2f\x9a\x56\xf5\x57\x60\x8e\x99\x56\x39\x28\xe5\x75\x70\x45\x83\xd4\x0e\x02\x5d\x1d\xfb\x23\xd7\x20\x5a\x93\x77\xdd\x1c\x34\xf3\x2b\xf8\x77\xa2\x39\xfa\x2f\x38\x40\x6e\xd4\x87\x81\x7b\x06\xdc\xa8\x77\x05\x6f\xef\x8a\xff\x58\xfe\xbd\x7b\x54\xcd\xb7\x93\x9d\xc9\x9e\xdb\xa3\x52\xd5\xe2\x79\x60\x40\x64\x7b\x52\xb9\x1c\x55\xb2\xe7\x82\xf7\xfc\x79\x04\x40\xcd\x2b\xf9\x0c\x4e\x36\xd7\xa6\xe0\xf6\x63\xf7\x9e\x92\xf3\x9e\xeb\x66\xff\xd1\x69\x34\x78\x8f\x21\x79\xdf\x36\x47\xf3\x0c\xfe\x3a\x09\x80\xd3\x27\xa1\xcf\x76\x23\x00\x4c\xab\xee\x83\x7b\x06\x8e\x65\x7d\xb6\x78\xfd\x08\x6e\x54\xad\xaa\x63\x75\xc7\xac\x7f\x35\x78\xfd\xbd\xc6\x1e\xa2\x1f\x8f\x1b\x08\x7c\xf2\xfd\x08\xfd\xf6\x41\xe1\x37\x6e\xd4\xef\x68\x67\x78\xfe\xe7\x94\x11\xf8\xdd\xaa\x3c\xff\xf2\x1b\xbf\xfc\xc6\x2f\xbf\xf1\xcb\x6f\xfc\xf2\x1b\xbf\xfc\xc6\xff\xdc\x6f\x8c\xfe\x19\x00\x00\xff\xff\xa1\xf9\x78\xd6\x0f\x12\x00\x00")

func templatesApiRegistrationYamlBytes() ([]byte, error) {
	return bindataRead(
		_templatesApiRegistrationYaml,
		"templates/api-registration.yaml",
	)
}

func templatesApiRegistrationYaml() (*asset, error) {
	bytes, err := templatesApiRegistrationYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/api-registration.yaml", size: 4623, mode: os.FileMode(416), modTime: time.Unix(1505432028, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesApiRegistrationYamlTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x93\x41\x6f\xe3\x36\x10\x85\xef\xfa\x15\x0f\xf1\xa5\x05\x1c\xd9\xce\xa5\x85\x7b\x72\xbc\x69\x2b\x6c\x6a\x07\x91\xd3\x45\x4e\x8b\x31\x35\x96\x06\xa1\x48\x96\xa4\xec\x15\x16\xfb\xdf\x0b\xca\x72\xba\xc1\xb6\xa7\x2e\x8f\x33\x6f\x86\x1f\xdf\x0c\x27\xff\xfb\x64\x13\xac\xad\xeb\xbd\xd4\x4d\xc4\xcd\x7c\xf1\x13\x7e\xb3\xb6\xd6\x8c\xc2\xa8\x3c\x4b\xe9\x7b\x51\x6c\x02\x57\xe8\x4c\xc5\x1e\xb1\x61\xac\x1c\xa9\x86\x2f\x99\x29\xfe\x64\x1f\xc4\x1a\xdc\xe4\x73\xfc\x90\x04\x57\x63\xea\xea\xc7\x5f\xb2\x09\x7a\xdb\xa1\xa5\x1e\xc6\x46\x74\x81\x11\x1b\x09\x38\x88\x66\xf0\x27\xc5\x2e\x42\x0c\x94\x6d\x9d\x16\x32\x8a\x71\x92\xd8\x0c\xd7\x8c\x4d\xf2\x6c\x82\xe7\xb1\x85\xdd\x47\x12\x03\x82\xb2\xae\x87\x3d\x7c\xad\x03\xc5\x01\x38\x9d\x26\x46\x17\x96\xb3\xd9\xe9\x74\xca\x69\xa0\xcd\xad\xaf\x67\xfa\xac\x0c\xb3\xfb\x62\x7d\xb7\x29\xef\xae\x6f\xf2\xf9\x50\xf3\x64\x34\x87\x00\xcf\x7f\x75\xe2\xb9\xc2\xbe\x07\x39\xa7\x45\xd1\x5e\x33\x34\x9d\x60\x3d\xa8\xf6\xcc\x15\xa2\x4d\xc0\x27\x2f\x51\x4c\x3d\x45\xb0\x87\x78\x22\xcf\xd9\x04\x95\x84\xe8\x65\xdf\xc5\x37\x6e\x5d\xf0\x24\xbc\x11\x58\x03\x32\xb8\x5a\x95\x28\xca\x2b\xdc\xae\xca\xa2\x9c\x66\x13\x7c\x28\x76\xbf\x6f\x9f\x76\xf8\xb0\x7a\x7c\x5c\x6d\x76\xc5\x5d\x89\xed\x23\xd6\xdb\xcd\xbb\x62\x57\x6c\x37\x25\xb6\xbf\x62\xb5\x79\xc6\xfb\x62\xf3\x6e\x0a\x96\xd8\xb0\x07\x7f\x72\x3e\xf1\x5b\x0f\x49\x3e\x72\x95\x4c\x2b\x99\xdf\x00\x1c\xec\x19\x28\x38\x56\x72\x10\x05\x4d\xa6\xee\xa8\x66\xd4\xf6\xc8\xde\x88\xa9\xe1\xd8\xb7\x12\xd2\x34\x03\xc8\x54\xd9\x04\x5a\x5a\x89\x14\x87\xc8\x37\x8f\x3a\xaf\xc8\x2e\xed\xc4\x43\x91\x9c\xf1\x5c\x4b\x88\xec\x53\x71\xc2\xb2\xe1\xab\x81\xb6\x24\x66\x46\x75\xed\xb9\xa6\x64\x41\xaa\x09\xec\x8f\xec\x13\xae\xa2\xdb\xce\x54\x9a\xd1\x76\x21\x62\xcf\x20\x44\x6e\x9d\x1e\xa4\x47\xf2\x92\x66\x31\x1d\x1a\x8b\x09\xec\x53\xb8\xea\x0d\xb5\xa2\x48\xeb\xfe\x8c\xb2\x5e\x7d\x7c\x78\xba\xbd\x2f\xd6\x1f\xdf\xdf\x3d\x2f\xa1\xb4\xb0\x89\x50\xec\x63\x7a\x31\x45\x06\x75\xb1\xb1\x5e\x62\x0f\xd7\xed\xb5\x28\xbc\x70\x9f\xd6\x32\xbd\x35\x39\xd4\x76\xb1\x23\x8d\xdd\x7d\x79\x06\x4f\xd0\x53\xfc\x17\x75\xf6\x1d\xbe\x20\x39\x19\x7f\xd0\x12\xe4\xe4\x6c\xa1\x1f\x2c\xcf\x5f\x7e\x0e\xb9\xd8\xd9\x71\xb1\xe7\x48\x8b\xec\x45\x4c\xb5\x4c\x04\x25\xfb\xa3\x28\xce\x5a\x8e\x54\x51\xa4\x65\x06\x18\x6a\x79\x89\xe3\x82\xb4\x6b\x68\x91\x87\xb3\x44\x51\x24\x6d\xeb\xb1\x53\x96\x86\x9f\xc4\xb5\xb7\x9d\x5b\xe2\xdf\x45\xc0\xf1\x02\x74\x69\x97\x01\xce\xcb\x60\xdc\x12\x37\xf3\xf9\xa5\xc5\xc3\x18\xfc\x43\x8c\xb4\x5d\x3b\xe4\xe6\xff\x34\x78\x78\xad\x59\xa4\xe8\x78\x5d\x02\xb8\xf0\x8e\xa1\xeb\x11\xe1\x9a\x9c\xbc\x66\x83\x23\xf5\xad\x24\xc3\xeb\xae\x2c\xf1\xf9\x33\xf2\x37\x43\xc7\x97\x2f\xd9\xdf\x01\x00\x00\xff\xff\xa9\x27\xd4\xd1\x18\x05\x00\x00")

func templatesApiRegistrationYamlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesApiRegistrationYamlTmpl,
		"templates/api-registration.yaml.tmpl",
	)
}

func templatesApiRegistrationYamlTmpl() (*asset, error) {
	bytes, err := templatesApiRegistrationYamlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/api-registration.yaml.tmpl", size: 1304, mode: os.FileMode(416), modTime: time.Unix(1505783470, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesApiserverDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x54\x41\x73\xdb\x46\x0f\xbd\xf3\x57\x60\xa4\xcb\xf7\xcd\x98\xa2\x6c\x67\x9a\x96\x3d\xa9\x71\x9a\x68\xe2\xc8\x9a\x48\x69\x26\x47\x68\x09\x91\x18\x2f\x77\x59\xec\x52\x32\xfb\xeb\x3b\x4b\x4a\x34\x19\x3b\x69\x3b\x39\xb4\x7b\xf0\x58\x78\xc0\x5b\xe0\xf1\x2d\xa6\xdf\x7d\xa2\x29\xbc\xb2\x55\x23\x9c\x17\x1e\xae\xe6\x97\x2f\xe1\x8d\xb5\xb9\x26\x58\x1a\x35\x8b\x02\x7c\xcb\x8a\x8c\xa3\x0c\x6a\x93\x91\x80\x2f\x08\x16\x15\xaa\x82\xce\xc8\x05\xfc\x46\xe2\xd8\x1a\xb8\x9a\xcd\xe1\x7f\x21\x61\x72\x82\x26\xff\xff\x39\x9a\x42\x63\x6b\x28\xb1\x01\x63\x3d\xd4\x8e\xc0\x17\xec\x60\xcf\x9a\x80\x1e\x14\x55\x1e\xd8\x80\xb2\x65\xa5\x19\x8d\x22\x38\xb2\x2f\xda\x6b\x4e\x24\xb3\x68\x0a\x9f\x4f\x14\x76\xe7\x91\x0d\x20\x28\x5b\x35\x60\xf7\xc3\x3c\x40\xdf\x36\x1c\x4e\xe1\x7d\xe5\xd2\x24\x39\x1e\x8f\x33\x6c\xbb\x9d\x59\xc9\x13\xdd\x65\xba\xe4\x76\xf9\xea\xf5\x6a\xf3\x3a\xbe\x9a\xcd\xdb\x9a\x8f\x46\x93\x73\x20\xf4\x7b\xcd\x42\x19\xec\x1a\xc0\xaa\xd2\xac\x70\xa7\x09\x34\x1e\xc1\x0a\x60\x2e\x44\x19\x78\x1b\x1a\x3e\x0a\x7b\x36\xf9\x05\x38\xbb\xf7\x47\x14\x8a\xa6\x90\xb1\xf3\xc2\xbb\xda\x8f\xd4\x3a\xb7\xc7\x6e\x94\x60\x0d\xa0\x81\xc9\x62\x03\xcb\xcd\x04\x7e\x59\x6c\x96\x9b\x8b\x68\x0a\x9f\x96\xdb\xb7\x77\x1f\xb7\xf0\x69\xf1\xe1\xc3\x62\xb5\x5d\xbe\xde\xc0\xdd\x07\x78\x75\xb7\xba\x59\x6e\x97\x77\xab\x0d\xdc\xfd\x0a\x8b\xd5\x67\x78\xb7\x5c\xdd\x5c\x00\xb1\x2f\x48\x80\x1e\x2a\x09\xfd\x5b\x01\x0e\x3a\x52\x16\x44\xdb\x10\x8d\x1a\xd8\xdb\xae\x21\x57\x91\xe2\x3d\x2b\xd0\x68\xf2\x1a\x73\x82\xdc\x1e\x48\x0c\x9b\x1c\x2a\x92\x92\x5d\xf8\x9a\x0e\xd0\x64\xd1\x14\x34\x97\xec\xd1\xb7\x91\x27\x43\x75\x16\xb9\xa1\x4a\xdb\xa6\x24\xe3\xdb\x3b\x1c\xc9\x81\x15\x81\x42\x8f\xda\xe6\x80\x15\xb7\x31\x92\x19\x6c\x8f\x16\x76\x6c\x50\x98\x1c\xa0\x10\x48\x6d\x80\x4d\x34\xed\x5c\x91\xf5\x4c\xe9\x73\x34\x1d\x4b\x68\x0c\xc8\xab\x6c\x16\xfe\x06\x5d\xa5\x0e\x0c\xad\x71\x30\x8c\xe0\xd8\xf9\xd0\xcd\xc1\xea\xba\xec\x9a\xfc\xfe\x97\x72\xcf\x26\x4b\x07\xb3\x46\x58\xf1\xc9\xf9\x29\xd0\x83\x27\xd3\xca\x96\x1c\x2e\x77\xe4\xf1\x32\x2a\xc9\x63\x86\x1e\xd3\x08\xc0\x60\x49\xe9\xe3\x04\xa7\x88\xab\x50\x51\x3f\x68\x7c\x1a\x34\x02\xd0\xb8\x23\xed\x42\x21\x04\x1f\x3e\x49\x89\x1f\x99\xc2\xc7\x0c\x89\x42\xad\x5d\x5d\x0a\x97\x11\x80\x23\x4d\xca\x5b\xe9\x28\x4a\xf4\xaa\xb8\x1d\x70\xfe\x25\x2b\x80\xa7\xb2\xd2\xe8\xe9\xc4\x30\x98\x25\x1c\x3d\x22\xfb\x1b\x74\x00\xe7\x46\xdb\xff\xbb\xcc\x85\x52\xb6\x36\x7e\xd5\x8a\x33\xe9\xd3\x27\xa7\x2c\x65\x4d\x78\xed\x24\xfd\x45\xf1\x33\x42\x76\x87\x4b\xcc\x29\x85\x5c\xc9\x8c\x6d\xe2\x08\x8d\x8b\x1d\x9a\x6c\x67\x1f\x92\x3e\x3b\x55\x68\x50\x9a\x71\xd1\xba\xd6\x7a\x6d\x35\xab\x26\x85\x85\x3e\x62\xe3\x7a\x5c\xc8\xd9\x5a\x14\x0d\x06\x85\x76\x47\x90\xf3\xa3\x18\x80\xaa\xea\x14\x2e\xe7\xf3\x72\x14\x2d\xa9\xb4\xd2\xa4\x70\x35\x7f\xcf\x03\xa0\x7d\x52\xff\x88\xe0\x7a\x48\x80\x92\xbb\xf4\xfc\xa3\x8f\xc6\x10\xc7\x98\x9d\x1e\x6f\x1c\xb4\x13\xab\x07\xe8\xe4\x5d\xbd\x23\x31\xe4\xc9\xad\xce\xde\xbb\xe5\x3d\xa9\x46\x69\x9a\x8c\x68\x1c\xa9\x5a\x28\xae\xac\xf8\x21\xc1\x8f\x2f\x5e\x5c\x7f\x91\xe8\xad\x60\x4e\xb1\x6f\x2a\x1a\x00\xe1\x6d\x8e\xf2\x42\x20\xee\xbe\x81\x1b\x00\x61\x4b\xa7\x49\xd2\xa1\x07\x95\x5e\x5d\xbf\xfc\x69\x58\x77\x18\xde\xfe\xc3\xe3\xd5\xa1\xb1\x81\x7c\xf1\xa3\x53\xd6\x56\x7c\x0a\xa1\xd1\x1e\xed\x76\xc0\xfb\x60\xb4\x51\xcd\x17\x4e\x8a\x15\x0d\xa6\x05\x28\x43\xc1\x1a\x7d\x91\x42\x72\x40\x49\xa4\x36\xc9\x7d\xaf\x60\xfc\xf4\xcd\x9e\x8f\x10\x66\x77\x46\x37\x29\x78\xa9\x29\x1a\x86\xd9\x90\x73\x6b\xb1\x3b\x1a\x7e\xfb\xa0\xc2\x1b\xf2\x63\x3b\x54\x4f\x07\x69\xc3\x5d\x43\x05\xa1\xf6\xc5\x1f\x23\xc8\xa9\x82\xc2\x44\x6f\xb7\xdb\xf5\x66\x80\xec\x91\x75\x2d\xb4\x2d\x84\x5c\x61\x75\xd6\x2d\x88\xf3\x61\xc3\x9e\x51\xdf\x90\xc6\x66\x43\xca\x9a\x2c\x6c\x90\xf9\x20\xa3\x22\x61\x9b\x3d\x8f\xb9\x5a\x29\x72\xee\x2b\xdc\x9e\x4b\xb2\xb5\xef\x4b\xaf\x7a\x4c\xf3\x81\xfe\x1b\x5a\x5c\xff\xcb\x5a\x74\xee\xfc\xfa\x82\x1b\xdb\xd2\x91\x92\xb1\x3a\x5d\x64\xf5\x6d\x2f\xb3\xa7\x72\xb4\x6e\x62\xb8\xa7\x60\x50\xed\x66\x6a\x94\x79\x56\xb5\xa7\xfa\x02\x1f\x14\xde\x53\xf3\xcd\xc2\x80\x47\x7f\x06\x00\x00\xff\xff\xe4\xd8\x30\x59\xa1\x0a\x00\x00")

func templatesApiserverDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_templatesApiserverDeploymentYaml,
		"templates/apiserver-deployment.yaml",
	)
}

func templatesApiserverDeploymentYaml() (*asset, error) {
	bytes, err := templatesApiserverDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/apiserver-deployment.yaml", size: 2721, mode: os.FileMode(416), modTime: time.Unix(1505432028, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCa_configJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xcc\xb1\x0a\xc2\x30\x18\x04\xe0\x3d\x4f\x71\xdc\xdc\xa1\xa0\x83\xe4\x55\xc4\xa1\xe8\x99\x06\x35\x94\xff\x6f\xc5\x52\xfa\xee\x92\x80\x38\xdc\xf2\x1d\x77\x5b\x00\xe8\x39\x95\x5c\x12\x23\x36\x04\x00\xe0\x4d\xf7\x61\x79\xce\x55\x1a\x00\xd4\x67\xca\xb6\x32\x82\xc7\xc3\xa9\xef\x47\x76\xbf\x66\xf1\x21\xc9\x19\x71\xfe\x5f\x75\xe0\x43\x2b\x54\xae\x79\x1a\x65\x2f\x95\xb9\x9a\xcb\xde\x32\xe2\xd2\xb6\x7b\xa8\xd9\xc3\x37\x00\x00\xff\xff\x80\xfc\xeb\xe4\x85\x00\x00\x00")

func templatesCa_configJsonBytes() ([]byte, error) {
	return bindataRead(
		_templatesCa_configJson,
		"templates/ca_config.json",
	)
}

func templatesCa_configJson() (*asset, error) {
	bytes, err := templatesCa_configJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/ca_config.json", size: 133, mode: os.FileMode(416), modTime: time.Unix(1505780515, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCa_csrJsonTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x0a\xc2\x30\x10\xc6\xf1\xf9\xee\x29\x8e\x6f\x2e\xa2\xc5\x41\xb2\x76\x71\x10\x1c\x6a\xe9\x20\x1d\x22\x44\xad\xad\x0d\x34\x75\xd0\x90\x77\x97\x2b\xa5\xe3\xef\xcf\x7d\x17\x99\xf0\xf4\x61\x0a\x30\x72\x15\xc4\x28\x9b\xa3\x0f\xd3\x4e\x52\x42\xb6\x32\x57\x4a\x93\x31\xa1\x73\x5f\x18\x89\x4c\x04\xdb\x3f\x3c\x8c\x60\x0c\x16\x99\x86\xd0\xfe\x1c\x8c\xe4\xdb\xfd\x81\x29\xe9\xf5\x60\xdf\x6e\x7e\xcd\x44\xba\x21\x14\xba\xa8\xca\x79\x40\x38\xa9\x82\x1d\xe4\xe5\x83\x5b\xda\x59\x5b\xf7\xb9\xad\xae\x34\xd4\x75\xbd\xb8\xbc\xa8\x0b\xdb\xb7\x77\x3f\x0e\xad\x05\x13\x25\xa6\x86\x13\xff\x03\x00\x00\xff\xff\x8a\x02\x37\x24\xce\x00\x00\x00")

func templatesCa_csrJsonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesCa_csrJsonTmpl,
		"templates/ca_csr.json.tmpl",
	)
}

func templatesCa_csrJsonTmpl() (*asset, error) {
	bytes, err := templatesCa_csrJsonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/ca_csr.json.tmpl", size: 206, mode: os.FileMode(416), modTime: time.Unix(1505779730, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesControllerManagerDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x55\x4d\x8f\xdb\x36\x10\xbd\xeb\x57\x0c\xec\x4b\x0b\xac\xfc\xd5\x06\x0d\x54\xf4\xe0\xee\x6e\x52\x23\xbb\xb6\xb1\xde\x34\xc8\xa9\x18\x53\x63\x69\xb0\x14\xa9\x0e\x29\x7b\xd5\x5f\x5f\x50\xb2\x1d\x29\xde\x06\x0d\x02\xb4\x3c\x59\xf3\x66\x1e\xdf\x0c\x1f\xe9\xe1\x37\xaf\x68\x08\xd7\xb6\xac\x85\xb3\xdc\xc3\x6c\x32\xfd\x09\xde\x5a\x9b\x69\x82\x85\x51\xa3\x28\xc0\x77\xac\xc8\x38\x4a\xa1\x32\x29\x09\xf8\x9c\x60\x5e\xa2\xca\xe9\x84\x5c\xc1\xef\x24\x8e\xad\x81\xd9\x68\x02\xdf\x85\x84\xc1\x11\x1a\x7c\xff\x73\x34\x84\xda\x56\x50\x60\x0d\xc6\x7a\xa8\x1c\x81\xcf\xd9\xc1\x8e\x35\x01\x3d\x2b\x2a\x3d\xb0\x01\x65\x8b\x52\x33\x1a\x45\x70\x60\x9f\x37\xdb\x1c\x49\x46\xd1\x10\x3e\x1e\x29\xec\xd6\x23\x1b\x40\x50\xb6\xac\xc1\xee\xba\x79\x80\xbe\x11\x1c\x56\xee\x7d\xe9\x92\xf1\xf8\x70\x38\x8c\xb0\x51\x3b\xb2\x92\x8d\x75\x9b\xe9\xc6\x77\x8b\xeb\xdb\xe5\xe6\x36\x9e\x8d\x26\x4d\xcd\x7b\xa3\xc9\x39\x10\xfa\xb3\x62\xa1\x14\xb6\x35\x60\x59\x6a\x56\xb8\xd5\x04\x1a\x0f\x60\x05\x30\x13\xa2\x14\xbc\x0d\x82\x0f\xc2\x9e\x4d\x76\x05\xce\xee\xfc\x01\x85\xa2\x21\xa4\xec\xbc\xf0\xb6\xf2\xbd\x69\x9d\xe4\xb1\xeb\x25\x58\x03\x68\x60\x30\xdf\xc0\x62\x33\x80\x5f\xe7\x9b\xc5\xe6\x2a\x1a\xc2\x87\xc5\xe3\x6f\xab\xf7\x8f\xf0\x61\xfe\xf0\x30\x5f\x3e\x2e\x6e\x37\xb0\x7a\x80\xeb\xd5\xf2\x66\xf1\xb8\x58\x2d\x37\xb0\x7a\x03\xf3\xe5\x47\x78\xb7\x58\xde\x5c\x01\xb1\xcf\x49\x80\x9e\x4b\x09\xfa\xad\x00\x87\x39\x52\x1a\x86\xb6\x21\xea\x09\xd8\xd9\x56\x90\x2b\x49\xf1\x8e\x15\x68\x34\x59\x85\x19\x41\x66\xf7\x24\x86\x4d\x06\x25\x49\xc1\x2e\x9c\xa6\x03\x34\x69\x34\x04\xcd\x05\x7b\xf4\x4d\xe4\xa2\xa9\xd6\x22\x37\x54\x6a\x5b\x17\x64\x7c\xb3\x87\x23\xd9\xb3\x22\x50\xe8\x51\xdb\x0c\x94\x35\x5e\xac\xd6\x24\x50\xa0\xc1\x8c\xa4\x29\xfb\x76\xef\x3e\xb1\x49\x93\xce\xee\x11\x96\x7c\xf4\x62\x02\xf4\xec\xc9\x34\x8d\x8c\xf7\xd3\x2d\x79\x9c\x46\x05\x79\x4c\xd1\x63\x12\x01\x18\x2c\x28\xe9\x48\x8b\x8f\xd2\x8e\x90\x2b\x51\x51\x72\x6a\x25\x3e\xb6\x12\x01\x68\xdc\x92\x76\x81\x01\x82\x45\x2e\x52\xe2\x17\x28\xc3\xc0\x43\x85\x50\x63\x29\x97\xc0\x34\x02\x70\xa4\x49\x79\x2b\x2d\x57\x81\x5e\xe5\x77\x1d\xf2\x7f\x4f\x0f\xe0\xa9\x28\x35\x7a\x3a\x52\x75\xda\x0c\x4b\xf7\x58\xbf\x86\x17\xe0\x24\xbd\xf9\xdd\x96\xcc\x95\xb2\x95\xf1\xcb\x66\x80\x83\xcb\xba\xc1\x31\x3d\x20\xc8\x86\xe4\xbc\x75\xfc\xa5\xa9\xb7\x8b\x0b\xcc\x28\x81\x4c\xc9\x88\xed\xd8\x11\x1a\x17\x3b\x34\xe9\xd6\x3e\x8f\x2f\xcb\x12\x85\x06\xa5\xee\x57\xaf\x2b\xad\xd7\x56\xb3\xaa\x13\x98\xeb\x03\xd6\xee\x8c\x0b\x39\x5b\x89\xa2\xce\x30\xa0\xb9\xf4\xe4\x7c\x2f\x06\xa0\xca\x2a\x81\xe9\x64\x52\xf4\xa2\x05\x15\x56\xea\x04\x66\x93\x7b\xee\x00\xcd\x1d\xf9\x2a\x82\x57\x5d\x02\x32\xfb\x4f\xb5\xa7\x21\xbd\x7b\xbd\xf9\x63\x39\xbf\xbf\xdd\xac\xe7\xd7\xb7\x1d\x8e\x3d\xea\x8a\xde\x88\x2d\xfa\xdb\xed\x98\x74\xfa\x40\xbb\x7e\xf4\x18\x5f\xa3\xcf\x93\xb3\x2f\x46\x67\x83\x7f\xb2\x84\x64\xae\x2b\x21\x8e\x4b\x2b\xbe\x13\x18\xbc\x9e\xbc\x9e\x0c\x4e\xdf\x5d\x20\x8e\x35\x61\x4a\x12\x37\x76\xfe\x65\x87\xda\xd1\xa0\x4b\xb5\xef\x66\x4f\x27\x3d\x2c\x16\x72\xb5\x51\x31\x1b\x4f\xb2\x47\xdd\xc1\x5e\x15\xbd\xc4\xad\xd8\x27\x92\x58\x48\xb3\xf3\x2f\xe5\xcf\x7e\xcc\xcf\x5f\x41\x7c\xaf\x9f\xb3\x17\xd7\x56\x7c\x02\xa1\x99\x33\xba\xb7\xba\x2a\xe8\x3e\x78\xda\x5d\x1e\xc3\xc5\x3d\xa1\xce\x5c\x00\x8a\x50\xd6\x8e\x77\x4c\x5e\x8d\x3f\x4f\x77\x4e\xf7\xac\x86\xe9\xca\xe8\x3a\x01\x2f\x15\x45\xdd\x30\x1b\x72\x6e\x2d\x76\x4b\xdd\x13\x0c\xff\x63\x6f\xc9\xf7\x0f\xb5\xbc\xec\xa1\x09\xb7\x2a\x72\x42\xed\xf3\xbf\x3a\xd0\x0e\x59\x57\x42\x8f\xb9\x90\xcb\xad\x4e\xdb\xe7\xe7\xb4\xd8\xb0\x67\xd4\x37\xa4\xb1\xde\x90\xb2\x26\x0d\xef\x53\x97\xba\x24\x61\x9b\xbe\x8c\xb9\x4a\x29\x72\xee\x1f\xb8\x3d\x17\x64\x2b\x7f\x2e\x9d\x9d\x31\xcd\x7b\xfa\x2f\x3b\xfe\xe1\x7f\xee\xb8\x35\xd9\xc5\x4b\xf8\x45\x77\x39\x52\xd2\x9f\x44\x1b\x69\x5f\x5e\x2c\x39\x54\x93\x7c\x6e\x49\xf6\x54\xf4\xde\xa2\x18\x9e\x28\x58\x4e\xbb\x91\xea\x65\x9e\x26\x78\xa6\x6a\xf0\xbf\x03\x00\x00\xff\xff\x8b\xc7\x99\xa8\x55\x0a\x00\x00")

func templatesControllerManagerDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_templatesControllerManagerDeploymentYaml,
		"templates/controller-manager-deployment.yaml",
	)
}

func templatesControllerManagerDeploymentYaml() (*asset, error) {
	bytes, err := templatesControllerManagerDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/controller-manager-deployment.yaml", size: 2645, mode: os.FileMode(416), modTime: time.Unix(1505432028, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesEtcdSvcYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x52\x4d\x6f\xdb\x48\x0c\xbd\xeb\x57\x3c\x58\x97\x5d\xc0\x1f\x89\xf7\x10\xac\x7a\x72\x93\xb4\x15\x1a\xd8\x45\xe4\x34\xc8\x91\x1e\xd1\x12\xd1\xf1\xcc\x74\x86\xb6\xe2\x7f\x5f\x48\x76\xd0\xa4\x3d\x86\xa7\x19\xbe\x47\xf2\xf1\x23\x7f\xb7\x65\x39\xae\x7d\x38\x46\x69\x5a\xc5\xfc\xe2\xf2\x0a\x9f\xbd\x6f\x2c\xa3\x74\x66\x9a\xf5\xf0\x9d\x18\x76\x89\x6b\xec\x5d\xcd\x11\xda\x32\x16\x81\x4c\xcb\x2f\xc8\x18\xdf\x39\x26\xf1\x0e\xf3\xe9\x05\xfe\xe9\x09\xa3\x33\x34\xfa\xf7\x43\x96\xe3\xe8\xf7\xd8\xd1\x11\xce\x2b\xf6\x89\xa1\xad\x24\x6c\xc5\x32\xf8\xd9\x70\x50\x88\x83\xf1\xbb\x60\x85\x9c\x61\x74\xa2\xed\x50\xe6\x9c\x64\x9a\xe5\x78\x3a\xa7\xf0\x1b\x25\x71\x20\x18\x1f\x8e\xf0\xdb\xd7\x3c\x90\x0e\x82\x7b\x6b\x55\x43\x2a\x66\xb3\xae\xeb\xa6\x34\xa8\x9d\xfa\xd8\xcc\xec\x89\x99\x66\x77\xe5\xf5\xed\xb2\xba\x9d\xcc\xa7\x17\x43\xcc\x83\xb3\x9c\x12\x22\xff\xdc\x4b\xe4\x1a\x9b\x23\x28\x04\x2b\x86\x36\x96\x61\xa9\x83\x8f\xa0\x26\x32\xd7\x50\xdf\x0b\xee\xa2\xa8\xb8\x66\x8c\xe4\xb7\xda\x51\xe4\x2c\x47\x2d\x49\xa3\x6c\xf6\xfa\x66\x5a\x2f\xf2\x24\xbd\x21\x78\x07\x72\x18\x2d\x2a\x94\xd5\x08\x1f\x17\x55\x59\x8d\xb3\x1c\x8f\xe5\xfa\xcb\xea\x61\x8d\xc7\xc5\xfd\xfd\x62\xb9\x2e\x6f\x2b\xac\xee\x71\xbd\x5a\xde\x94\xeb\x72\xb5\xac\xb0\xfa\x84\xc5\xf2\x09\x5f\xcb\xe5\xcd\x18\x2c\xda\x72\x04\x3f\x87\xd8\xeb\xf7\x11\xd2\xcf\x91\xeb\x7e\x68\x15\xf3\x1b\x01\x5b\x7f\x12\x94\x02\x1b\xd9\x8a\x81\x25\xd7\xec\xa9\x61\x34\xfe\xc0\xd1\x89\x6b\x10\x38\xee\x24\xf5\xdb\x4c\x20\x57\x67\x39\xac\xec\x44\x49\x07\xcf\x5f\x4d\x0d\x27\xf2\xfe\x23\xa4\x20\xe7\x1b\x2a\x70\xb8\xcc\x7e\x88\xab\x0b\x54\x1c\x0f\x62\x38\xdb\xb1\x52\x4d\x4a\x45\x06\x38\xda\x71\x01\x56\x53\x4f\xd2\xc1\x9c\x1d\x29\x90\xe1\x02\xe9\xc4\x9f\x18\x52\xb2\xbe\xc9\x00\x4b\x1b\xb6\xa9\x8f\x43\xbf\xce\x53\x60\xd6\xb7\xdf\xfb\x82\x8f\x3a\x80\x93\xe1\x59\x60\xfe\xdf\xd5\xff\x03\xf7\x77\x95\xe1\xab\x14\x1b\xd6\x6f\xaf\x39\x89\x2d\x1b\xf5\xf1\xcf\xdc\xbf\x02\x00\x00\xff\xff\xdf\x90\xf7\x0c\x91\x03\x00\x00")

func templatesEtcdSvcYamlBytes() ([]byte, error) {
	return bindataRead(
		_templatesEtcdSvcYaml,
		"templates/etcd-svc.yaml",
	)
}

func templatesEtcdSvcYaml() (*asset, error) {
	bytes, err := templatesEtcdSvcYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/etcd-svc.yaml", size: 913, mode: os.FileMode(416), modTime: time.Unix(1505432028, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesEtcdYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x55\x4d\x6f\xdb\x46\x10\xbd\xf3\x57\x0c\xa4\x4b\x0b\x98\xa4\x2c\x1f\x8c\xb2\x27\xd5\x72\x5d\xa1\xb1\x24\x58\x4a\x8d\xa0\x28\x82\xd1\x72\x44\x0e\xb2\xdc\x65\x77\x87\x52\xf4\xef\x8b\xa5\x3e\x4c\xc6\x71\x81\x22\x40\x33\x3a\x71\xe7\xeb\xcd\xdb\xb7\xa3\xe1\x37\x5b\x34\x84\x3b\x5b\x1f\x1c\x17\xa5\xc0\x78\x74\x7d\x0b\x0f\xd6\x16\x9a\x60\x66\x54\x12\x05\xf7\x3b\x56\x64\x3c\xe5\xd0\x98\x9c\x1c\x48\x49\x30\xa9\x51\x95\x74\xf6\x5c\xc1\x1f\xe4\x3c\x5b\x03\xe3\x64\x04\x3f\x84\x80\xc1\xc9\x35\xf8\xf1\xe7\x68\x08\x07\xdb\x40\x85\x07\x30\x56\xa0\xf1\x04\x52\xb2\x87\x2d\x6b\x02\xfa\xac\xa8\x16\x60\x03\xca\x56\xb5\x66\x34\x8a\x60\xcf\x52\xb6\x6d\x4e\x45\x92\x68\x08\x1f\x4e\x25\xec\x46\x90\x0d\x20\x28\x5b\x1f\xc0\x6e\xbb\x71\x80\xd2\x02\x0e\x56\x8a\xd4\x3e\x4b\xd3\xfd\x7e\x9f\x60\x8b\x36\xb1\xae\x48\xf5\x31\xd2\xa7\xef\x66\x77\xf7\xf3\xd5\x7d\x3c\x4e\x46\x6d\xce\x7b\xa3\xc9\x7b\x70\xf4\x77\xc3\x8e\x72\xd8\x1c\x00\xeb\x5a\xb3\xc2\x8d\x26\xd0\xb8\x07\xeb\x00\x0b\x47\x94\x83\xd8\x00\x78\xef\x58\xd8\x14\x57\xe0\xed\x56\xf6\xe8\x28\x1a\x42\xce\x5e\x1c\x6f\x1a\xe9\xb1\x75\x86\xc7\xbe\x17\x60\x0d\xa0\x81\xc1\x64\x05\xb3\xd5\x00\x7e\x99\xac\x66\xab\xab\x68\x08\xcf\xb3\xf5\x6f\x8b\xf7\x6b\x78\x9e\x3c\x3d\x4d\xe6\xeb\xd9\xfd\x0a\x16\x4f\x70\xb7\x98\x4f\x67\xeb\xd9\x62\xbe\x82\xc5\xaf\x30\x99\x7f\x80\xdf\x67\xf3\xe9\x15\x10\x4b\x49\x0e\xe8\x73\xed\x02\x7e\xeb\x80\x03\x8f\x94\x07\xd2\x56\x44\x3d\x00\x5b\x7b\x04\xe4\x6b\x52\xbc\x65\x05\x1a\x4d\xd1\x60\x41\x50\xd8\x1d\x39\xc3\xa6\x80\x9a\x5c\xc5\x3e\xdc\xa6\x07\x34\x79\x34\x04\xcd\x15\x0b\x4a\x7b\xf2\x6a\xa8\x56\x22\xdf\x2e\x42\xac\xf9\xa4\xa1\x2c\xf0\xee\xd3\xdd\xf5\x86\x04\xaf\xa3\x4f\x6c\xf2\x0c\x56\x82\x42\xdb\x46\xaf\x48\xa2\x8a\x04\x73\x14\xcc\x22\x00\x83\x15\x65\x40\xa2\xf2\xd3\x87\xaf\x51\x51\x06\x9e\xdc\x8e\x15\xc5\x0a\x05\xb5\x2d\xa2\x30\x70\x88\x3f\x9d\xcf\xdb\xb4\x41\xc8\x1b\x44\x00\x8e\xda\x8b\xf6\x19\x5c\x47\x00\x42\x55\xad\x51\x28\xc4\x03\x74\xbb\x05\xd3\xb8\x21\xed\xcf\x5f\x10\xc0\x5e\x00\x00\x9c\xfb\x04\x93\x40\xa4\x69\x79\x7b\x70\xa8\x68\x49\x8e\x6d\xbe\x22\x65\x4d\x1e\x5a\x8d\x4e\x71\xca\x9a\x20\x69\x72\x97\xaa\x71\x7f\xae\xa3\x71\x85\x05\x65\x50\x28\x97\xb0\x4d\x8b\xf6\x8d\xc6\x2f\xb9\x69\x08\xce\x6e\x92\x51\x72\x7d\xdb\xcf\x59\x36\x5a\x2f\xad\x66\x75\xc8\x60\xa2\xf7\x78\xf0\x17\xbf\x23\x6f\x1b\xa7\xa8\x33\x0f\xb4\x4f\x80\xbc\xf4\xce\x00\x54\xdd\x04\xcc\xa3\xaa\x77\x5a\x51\x65\xdd\x21\x83\xf1\xe8\x91\x3b\x8e\x56\x31\xff\xa9\xc0\x4d\xb7\x00\x99\xdd\x4b\xee\x99\x8c\xfb\xf5\xdd\xf4\xe3\x74\xb2\x9e\x7c\x9c\xce\x9e\x3a\x35\x76\xa8\x1b\xca\xa0\x9d\x3f\x0e\x37\x15\xe7\xec\x2e\x7e\x65\xab\x0a\x4d\xde\x2d\x97\x36\xde\xa5\xda\x2a\xd4\xe9\x86\x4d\xda\x23\x39\x86\x38\xd6\xec\x85\x4c\xac\x34\x93\x91\xb8\x71\xda\x77\xdc\x61\xad\x64\x69\x3a\x4a\xda\x5f\x36\xbe\xb9\xfd\xa9\x97\x8c\xf9\x8e\x9c\xb0\xa7\x7f\xcf\x6f\xdb\x97\xd6\x4b\xbf\x42\x6d\x5d\x97\xb6\xf8\x45\x1b\x4b\xeb\x24\x83\x5e\xf0\xce\xea\xa6\xa2\x47\xdb\x98\x7e\xce\x8b\x76\x5e\xd3\x01\x50\x85\xf8\x25\x4a\xf9\x26\x65\x8e\x30\x67\x43\xde\x2f\x9d\xdd\x50\xf7\x12\x03\xf8\x07\x92\xfe\xbd\xd6\xaf\x91\xb5\xc7\xc7\x16\x25\xa1\x96\xb2\xe3\xd9\x22\xeb\xc6\xd1\xba\x74\xe4\x4b\xab\xf3\xe3\x9b\x3b\x1b\x1b\x16\x46\x3d\x25\x8d\x87\xd7\x2f\xa5\xad\xfb\xc6\x2b\x0a\xe6\x1b\xa5\xc8\xfb\x37\x6a\x0b\x57\x64\x1b\xb9\xa4\x8e\x2f\x3e\xcd\x3b\xfa\x1f\x07\xbe\xf9\x8e\x03\x1f\x45\x73\xa7\x91\xab\xf5\x69\xcf\xb5\xe2\x89\xbf\x5c\x74\x6f\xaa\x08\x8d\xb1\xa7\x7f\x83\xec\x0b\x2d\x26\x61\x65\x27\x9f\x9a\x0d\x39\x43\x42\x3e\x2c\x2a\x2f\xd6\x61\x11\x9e\x03\x7a\x9f\x81\x17\x34\x39\xba\xd7\xdb\x12\xdb\x49\x1e\x6d\x4e\x3e\x83\x3f\x61\xf0\x44\x98\x3f\x3b\x16\x5a\x18\x45\x03\xf8\xeb\x14\xf6\x95\x8d\xf5\x95\x7d\x75\x6a\x1a\xd8\x7a\xe0\xe8\x9f\x00\x00\x00\xff\xff\xec\xb9\xcd\x2f\x24\x09\x00\x00")

func templatesEtcdYamlBytes() ([]byte, error) {
	return bindataRead(
		_templatesEtcdYaml,
		"templates/etcd.yaml",
	)
}

func templatesEtcdYaml() (*asset, error) {
	bytes, err := templatesEtcdYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/etcd.yaml", size: 2340, mode: os.FileMode(416), modTime: time.Unix(1505432028, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGencert_configJsonTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x72\xf6\x53\xb2\x52\x50\xaa\xae\x56\xd0\x73\x0c\xf0\x0c\x4e\x2d\x2a\xcb\x4c\x4e\xf5\x4b\xcc\x4d\x55\xa8\xad\x55\xd2\xe1\x52\xca\xc8\x2f\x2e\x29\x56\xb2\x52\x88\x86\xa8\xf1\xc8\x2f\x2e\x31\x04\x4b\xc1\xb9\x46\x20\xae\x42\xac\x0e\x97\x52\x76\x6a\xa5\x92\x95\x42\x35\x97\x82\x82\x52\x62\x4e\x7a\x3e\xc8\xdc\xa2\xe2\x44\x25\x1d\x90\x40\x71\x66\x55\xaa\x92\x95\x82\x91\x81\x89\x05\x57\x2d\x57\x2d\x17\x20\x00\x00\xff\xff\x0b\x41\x2e\x03\x7a\x00\x00\x00")

func templatesGencert_configJsonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGencert_configJsonTmpl,
		"templates/gencert_config.json.tmpl",
	)
}

func templatesGencert_configJsonTmpl() (*asset, error) {
	bytes, err := templatesGencert_configJsonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gencert_config.json.tmpl", size: 122, mode: os.FileMode(416), modTime: time.Unix(1505781599, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesNamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x52\xc1\x6e\xdb\x3a\x10\xbc\xeb\x2b\x06\xd6\xe5\x3d\xc0\x91\x93\x5c\x0a\xb8\x27\x35\x49\x5b\xa1\x81\x0c\x44\x4e\x83\x1c\xd7\xd4\x5a\x5a\x94\x22\x59\x92\x8a\xe2\xbf\x2f\x28\x3b\x68\x8d\x1c\xb3\x47\xcd\x68\x67\x76\x38\xf9\x87\x27\xcb\x71\x63\xdd\xc1\x4b\xd7\x47\x5c\x5f\x5e\x7d\xc2\x37\x6b\x3b\xcd\xa8\x8c\x2a\xb2\x04\xdf\x8b\x62\x13\xb8\xc5\x68\x5a\xf6\x88\x3d\xa3\x74\xa4\x7a\x7e\x43\x96\xf8\xc9\x3e\x88\x35\xb8\x2e\x2e\xf1\x5f\x22\x2c\x4e\xd0\xe2\xff\xcf\x59\x8e\x83\x1d\x31\xd0\x01\xc6\x46\x8c\x81\x11\x7b\x09\xd8\x8b\x66\xf0\xab\x62\x17\x21\x06\xca\x0e\x4e\x0b\x19\xc5\x98\x24\xf6\xb3\xcc\x69\x49\x91\xe5\x78\x3e\xad\xb0\xbb\x48\x62\x40\x50\xd6\x1d\x60\xf7\xff\xf2\x40\x71\x36\x9c\xa6\x8f\xd1\x85\xf5\x6a\x35\x4d\x53\x41\xb3\xdb\xc2\xfa\x6e\xa5\x8f\xcc\xb0\xba\xaf\x6e\xee\xea\xe6\xee\xe2\xba\xb8\x9c\xff\x79\x34\x9a\x43\x80\xe7\xdf\xa3\x78\x6e\xb1\x3b\x80\x9c\xd3\xa2\x68\xa7\x19\x9a\x26\x58\x0f\xea\x3c\x73\x8b\x68\x93\xe1\xc9\x4b\x14\xd3\x2d\x11\xec\x3e\x4e\xe4\x39\xcb\xd1\x4a\x88\x5e\x76\x63\x3c\x4b\xeb\xcd\x9e\x84\x33\x82\x35\x20\x83\x45\xd9\xa0\x6a\x16\xf8\x52\x36\x55\xb3\xcc\x72\x3c\x55\xdb\xef\x9b\xc7\x2d\x9e\xca\x87\x87\xb2\xde\x56\x77\x0d\x36\x0f\xb8\xd9\xd4\xb7\xd5\xb6\xda\xd4\x0d\x36\x5f\x51\xd6\xcf\xf8\x51\xd5\xb7\x4b\xb0\xc4\x9e\x3d\xf8\xd5\xf9\xe4\xdf\x7a\x48\xca\x91\xdb\x14\x5a\xc3\x7c\x66\x60\x6f\x8f\x86\x82\x63\x25\x7b\x51\xd0\x64\xba\x91\x3a\x46\x67\x5f\xd8\x1b\x31\x1d\x1c\xfb\x41\x42\x7a\xcd\x00\x32\x6d\x96\x43\xcb\x20\x91\xe2\xfc\xe5\xdd\x51\xc7\x8a\x34\xec\x5f\x44\x31\x14\x45\xd2\xb6\x83\xa1\x81\x83\x23\xc5\xc5\x3b\xc8\x73\xb0\xa3\x57\x1c\x10\x7a\x3b\xea\x16\xbb\x14\x9c\xf2\x4c\x29\x13\x32\x2d\x06\x32\xd4\x71\x9b\x32\x9e\x8b\xf2\x77\x59\xd2\xfa\x78\xe1\xc9\xc9\xa9\xaf\x6b\xbc\x5c\x65\xbf\xc4\xb4\x6b\xd4\x6f\x22\xd9\xc0\x91\x5a\x8a\xb4\xce\x30\x4b\xaf\x11\x8e\x27\x5c\x9c\x4e\xc8\xfe\x04\x00\x00\xff\xff\x63\xeb\x8d\xcc\x75\x03\x00\x00")

func templatesNamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_templatesNamespaceYaml,
		"templates/namespace.yaml",
	)
}

func templatesNamespaceYaml() (*asset, error) {
	bytes, err := templatesNamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/namespace.yaml", size: 885, mode: os.FileMode(416), modTime: time.Unix(1505432028, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRbacYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\x4d\x8f\xdb\x36\x10\xbd\xeb\x57\x0c\xe4\x4b\x1b\xf8\x23\x9b\x4b\x0b\xf5\xe4\x6c\xd2\xd4\x48\x6a\x17\x6b\xa7\x41\x10\xf4\x40\x51\x63\x89\x5d\x8a\x54\xc9\x91\x1d\x17\xf9\xf1\x05\x49\xd9\x96\xd6\xca\xd7\x7a\x93\xdd\xfa\x62\x80\x1c\xcd\xbc\x99\x79\x1c\x3d\x6a\x70\xf6\x2f\x1a\xc0\xa5\xae\x76\x46\xe4\x05\xc1\x93\xc7\x17\x3f\xc1\x0b\xad\x73\x89\x30\x53\x7c\x1c\xb9\xed\x57\x82\xa3\xb2\x98\x41\xad\x32\x34\x40\x05\xc2\xb4\x62\xbc\xc0\xfd\xce\x10\xfe\x44\x63\x85\x56\xf0\x64\xfc\x18\x7e\x70\x06\x71\xb3\x15\xff\xf8\x4b\x34\x80\x9d\xae\xa1\x64\x3b\x50\x9a\xa0\xb6\x08\x54\x08\x0b\x6b\x21\x11\xf0\x3d\xc7\x8a\x40\x28\xe0\xba\xac\xa4\x60\x8a\x23\x6c\x05\x15\x3e\x4c\xe3\x64\x1c\x0d\xe0\x6d\xe3\x42\xa7\xc4\x84\x02\x06\x5c\x57\x3b\xd0\xeb\xb6\x1d\x30\xf2\x80\xdd\xaf\x20\xaa\x6c\x32\x99\x6c\xb7\xdb\x31\xf3\x68\xc7\xda\xe4\x13\x19\x2c\xed\xe4\xd5\xec\xf2\xf9\x7c\xf9\x7c\xf4\x64\xfc\xd8\x3f\xf3\x5a\x49\xb4\x16\x0c\xfe\x53\x0b\x83\x19\xa4\x3b\x60\x55\x25\x05\x67\xa9\x44\x90\x6c\x0b\xda\x00\xcb\x0d\x62\x06\xa4\x1d\xe0\xad\x11\x24\x54\x3e\x04\xab\xd7\xb4\x65\x06\xa3\x01\x64\xc2\x92\x11\x69\x4d\x9d\x6a\xed\xe1\x09\xdb\x31\xd0\x0a\x98\x82\x78\xba\x84\xd9\x32\x86\xa7\xd3\xe5\x6c\x39\x8c\x06\xf0\x66\xb6\xfa\x6d\xf1\x7a\x05\x6f\xa6\x57\x57\xd3\xf9\x6a\xf6\x7c\x09\x8b\x2b\xb8\x5c\xcc\x9f\xcd\x56\xb3\xc5\x7c\x09\x8b\x5f\x61\x3a\x7f\x0b\x2f\x67\xf3\x67\x43\x40\x41\x05\x1a\xc0\xf7\x95\x71\xf8\xb5\x01\xe1\xea\x88\x99\x2b\xda\x12\xb1\x03\x60\xad\x03\x20\x5b\x21\x17\x6b\xc1\x41\x32\x95\xd7\x2c\x47\xc8\xf5\x06\x8d\x12\x2a\x87\x0a\x4d\x29\xac\xeb\xa6\x05\xa6\xb2\x68\x00\x52\x94\x82\x18\xf9\x95\x93\xa4\x02\x45\x96\xba\x36\x1c\x13\xe0\x8c\x98\xd4\xf9\x84\xb0\xac\x24\x23\xb4\x13\x93\x32\x3e\xde\xb1\x52\x3a\xbb\xf3\xc9\xca\x2a\xd1\x70\x2d\x81\xcd\x45\x74\x2d\x54\x96\xc0\x2b\x61\x29\x12\x84\xa5\x4d\x22\x47\x67\x59\x5b\x42\x33\xda\x8a\x0c\x3b\xe9\x90\x06\x83\x2c\x03\xc5\x4a\xb4\x15\xe3\x68\xa3\x11\xb4\x3d\x7a\xb0\xac\xa6\x42\x1b\xf1\xaf\xcf\x78\x7c\xfd\xb3\x1d\x0b\x3d\xd9\x5c\xa4\x48\xec\x22\x02\x08\x21\x9b\x18\x57\x5a\x62\x04\x50\x22\xb1\x8c\x11\x4b\x22\x47\x3d\xe7\x3e\x81\xf8\x10\x65\xe4\x82\xa2\x89\x23\x00\x53\x4b\xb4\xce\xca\xc7\x7d\x61\x74\x5d\xd9\x04\xde\xc5\xf1\x5f\xfe\x49\x83\xd6\x17\xd2\xaf\x1d\x51\x36\xbb\x1b\x34\xa9\x4d\x3c\xbb\xdf\xc5\x39\x52\x3c\x84\x58\x0a\xeb\xff\xb7\x8c\x78\xe1\xed\x5c\x95\x61\xfa\xc7\x0c\x96\x68\x36\x68\xc0\x55\xcd\xad\xc2\x0b\xb1\x41\xb7\xd1\xac\xbb\x1e\x1e\x42\x40\x80\xd8\xae\xd6\x5d\x94\xe6\xa9\x50\x99\x50\xf9\xc7\x2a\x64\xd1\x6c\x04\xc7\x86\x34\x8d\xbf\x84\x55\xc2\x7a\x88\xa3\xde\x0a\x6a\x89\x57\xb8\x0e\x7e\xf6\x35\xfc\x04\x3c\x6f\xd7\xd7\xb3\x4f\xf6\xc9\xd6\xe9\xdf\xc8\xe9\x46\xab\x12\x88\xe3\x96\xbf\x65\x80\x3f\xe5\x5c\xd7\x8a\xda\x2e\x0f\x29\xc4\x87\x55\x1f\xe1\x98\xf3\xa8\x49\x3a\x8e\x06\x70\xb0\x86\x1c\xc9\xfa\xc6\xb8\x4c\x46\x19\x4a\xcc\x19\x69\xe3\x93\x76\xec\x6d\x56\xc2\x3e\x64\xc8\xc5\x9e\xd8\xd1\xc0\x3f\xc7\xb5\xc1\xa3\xbf\x07\xd0\xc2\x6e\x22\xdf\xa4\x81\x76\x67\x09\xcb\xa4\x1b\xe9\x21\xf4\x30\x15\x52\xd0\xee\x30\x75\x1c\x40\x54\x24\x78\xc8\x0e\x56\xee\x25\xc8\xa4\xd4\x5b\x0b\x82\x42\x0f\xbd\x61\x67\x42\x73\xad\xd6\x22\x2f\x59\x05\x54\x30\x82\x82\x05\xe7\xee\x3d\x85\x96\x0a\xcf\xd8\xd1\x23\x40\x45\x46\x60\xc3\x04\x54\xfe\xa5\xc5\x2a\x01\x2c\xcf\x8d\xab\x88\xd0\xea\xd6\x6c\xb8\x23\x1a\x1c\x73\x6f\x1d\xb4\x4e\x61\xaf\xeb\x14\x47\xa1\x9d\xe7\x11\xe5\x06\x43\xf0\x3d\xa1\x72\x59\x8f\x3e\x83\xe8\xfb\xb2\xc6\x4f\xea\x4b\xad\xc8\x68\x29\xd1\x8c\x7e\x67\x8a\xe5\xcd\xc4\xde\xcf\xeb\x9e\xed\x07\x3b\xb8\xf9\x11\x6b\x19\xb0\xfe\x7f\x27\xf8\x69\x2e\x5f\xd4\x50\x38\x7d\x2e\x0c\xef\x0c\xd7\x42\xa1\x85\xad\x3b\xc4\x8c\x73\xa7\xd5\xfc\x39\xef\xfa\xe8\xf7\xa0\x10\x33\xaf\x5e\xc2\x42\x33\x00\x1a\xa9\xd0\x68\xe0\x68\x70\xe2\xeb\x1b\x6a\x9b\x2f\x26\x00\x0f\xbe\x5c\x0d\x3a\xfa\x07\x60\x00\xa9\xd1\xd7\x68\xbc\xca\xdc\x63\xe7\x92\x59\x8b\x16\x98\x41\x50\x5a\x1d\xf9\x93\x1d\x13\x1e\x37\x8f\xaf\x0a\xdc\x81\x2d\x74\x2d\x33\xb0\xc4\x76\xfe\x12\x11\xc2\xf9\x9a\x9f\xaa\xac\x5e\xd4\x7d\xd2\xab\x41\xf6\x51\xdd\xd5\xc8\xae\x96\xea\xba\x6d\xa4\x6e\xde\x7d\x01\x1f\x9d\xe5\xbf\xc9\x64\x62\x89\x51\xdd\xeb\xbf\xae\x32\x46\xd8\xec\x0c\x60\x4a\xe1\x76\x46\xa2\xc4\x21\xb8\x3c\x3f\xf8\x2c\x21\x0d\x23\xc1\x7e\x10\xca\x92\xbb\xa6\x85\x2e\xf1\xb6\xd8\xd6\x15\x9a\x40\xad\x73\x20\x37\x81\xe2\x61\x7c\x08\xd5\x07\xfc\xa4\x07\x0e\xfe\x8c\xf6\x94\x48\x11\x16\x2f\xdd\xa1\xe1\xfd\xd7\x01\x7f\x19\xc2\x0d\x2a\xb2\x3d\x68\xfb\x80\x05\xe3\x3e\x28\xdc\xa0\xab\xe1\x30\xae\x3c\x98\xe1\xb1\xa8\x0f\x68\x16\xb7\x8e\x62\x53\xe2\x6f\x33\x8d\x6f\x3b\x1b\xee\x65\x62\x9f\xa3\x89\xce\xee\xc8\x3e\xf3\x0e\xc8\x0c\xd7\xac\x96\xf4\x95\x97\x45\x8b\xdc\x60\x3f\x39\xdd\xc4\xba\x3d\x11\xef\x92\x81\x37\xa8\xf7\xb1\xb4\xef\x4c\xf7\x7d\x7d\x27\xee\x49\x35\xf8\xab\x40\x2e\x36\x68\x21\x8c\x92\x49\x18\x20\x07\xa5\xa0\x81\x29\x40\x95\x55\x5a\x28\xff\xb5\xac\x25\x95\xfd\x20\x93\x41\x06\xa2\x44\xee\xb5\xfe\x00\x56\x8b\x67\x8b\xc4\x7f\x6d\x63\x0a\xb4\x4f\x0b\xb4\xff\x56\x44\x45\xcb\x99\x1d\xfa\xf7\xaf\x50\x41\x8e\xb0\xb2\x2d\x2e\x59\x47\xa4\xec\xbf\xee\x0c\xfd\x77\xbc\x2e\x88\xef\x78\x90\x92\x90\xeb\x48\x6a\x7e\x2d\x54\x3e\xfa\x82\xa2\xdf\xb8\x58\x7c\xc5\xb9\x3a\x94\xe9\x13\x63\xff\xe4\xfd\x1c\x76\x4f\xdd\x85\xf5\x9b\x2e\xf7\x06\x73\x87\xb7\xf5\xa6\xdc\x33\xa4\x2f\xc1\x13\x30\x6d\x71\x72\xf6\xcb\xe7\xf3\x67\xfe\xf3\x10\xbf\xd7\xdd\xee\x2c\x92\xdc\xc7\x71\xff\x2f\x00\x00\xff\xff\x38\xfa\x49\xd9\xb2\x17\x00\x00")

func templatesRbacYamlBytes() ([]byte, error) {
	return bindataRead(
		_templatesRbacYaml,
		"templates/rbac.yaml",
	)
}

func templatesRbacYaml() (*asset, error) {
	bytes, err := templatesRbacYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/rbac.yaml", size: 6066, mode: os.FileMode(416), modTime: time.Unix(1505432028, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceAccountsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x4f\x4f\xdc\x30\x10\xc5\xef\xf9\x14\x4f\x9b\x4b\x2b\xed\x1f\xe0\x52\x29\x3d\xa5\x40\xdb\xa8\x68\x57\x22\x4b\x11\xc7\x59\x67\x36\x19\xd5\xb1\x5d\xdb\x21\xec\xb7\xaf\x92\x0d\x14\x4a\x0f\x95\xa8\x6f\x99\x99\x3c\xff\xe6\xf9\xa5\x6f\x3e\x49\x8a\x73\xeb\x0e\x5e\xea\x26\xe2\xec\xe4\xf4\x03\xbe\x58\x5b\x6b\x46\x61\xd4\x32\x19\xda\x57\xa2\xd8\x04\xae\xd0\x99\x8a\x3d\x62\xc3\xc8\x1d\xa9\x86\x1f\x3b\x73\x7c\x67\x1f\xc4\x1a\x9c\x2d\x4f\xf0\x6e\x18\x98\x4d\xad\xd9\xfb\x8f\x49\x8a\x83\xed\xd0\xd2\x01\xc6\x46\x74\x81\x11\x1b\x09\xd8\x8b\x66\xf0\x83\x62\x17\x21\x06\xca\xb6\x4e\x0b\x19\xc5\xe8\x25\x36\xe3\x35\x93\xc8\x32\x49\x71\x37\x49\xd8\x5d\x24\x31\x20\x28\xeb\x0e\xb0\xfb\xe7\x73\xa0\x38\x02\x0f\xa7\x89\xd1\x85\x6c\xb5\xea\xfb\x7e\x49\x23\xed\xd2\xfa\x7a\xa5\x8f\x93\x61\x75\x55\x9c\x5f\xae\xcb\xcb\xc5\xd9\xf2\x64\xfc\xe7\xc6\x68\x0e\x01\x9e\x7f\x76\xe2\xb9\xc2\xee\x00\x72\x4e\x8b\xa2\x9d\x66\x68\xea\x61\x3d\xa8\xf6\xcc\x15\xa2\x1d\x80\x7b\x2f\x51\x4c\x3d\x47\xb0\xfb\xd8\x93\xe7\x24\x45\x25\x21\x7a\xd9\x75\xf1\x85\x5b\x8f\x78\x12\x5e\x0c\x58\x03\x32\x98\xe5\x25\x8a\x72\x86\x4f\x79\x59\x94\xf3\x24\xc5\x6d\xb1\xfd\xba\xb9\xd9\xe2\x36\xbf\xbe\xce\xd7\xdb\xe2\xb2\xc4\xe6\x1a\xe7\x9b\xf5\x45\xb1\x2d\x36\xeb\x12\x9b\xcf\xc8\xd7\x77\xf8\x56\xac\x2f\xe6\x60\x89\x0d\x7b\xf0\x83\xf3\x03\xbf\xf5\x90\xc1\x47\xae\x06\xd3\x4a\xe6\x17\x00\x7b\x7b\x04\x0a\x8e\x95\xec\x45\x41\x93\xa9\x3b\xaa\x19\xb5\xbd\x67\x6f\xc4\xd4\x70\xec\x5b\x09\xc3\x6b\x06\x90\xa9\x92\x14\x5a\x5a\x89\x14\xc7\xca\xab\xa5\x8e\x11\x29\xd9\xdf\x8b\x62\x90\x52\xb6\x33\x31\x8c\x37\x85\xa9\xa8\x28\x92\xb6\x35\xc8\xc9\x58\x63\x3f\x08\x43\x59\x13\xbd\xd5\x9a\x7d\x92\xa2\x25\x43\x35\xfb\x51\xed\xed\x91\x26\x27\x53\x22\x33\xdc\x9f\x26\x3f\xc4\x54\x19\xae\x24\xc4\x44\x22\xb7\x21\x4b\x80\x14\xdb\x86\x51\xe6\x4f\x9e\x90\x93\x23\x5c\x02\x2c\xf0\x87\xc2\x90\xa8\xa3\xca\xb4\x69\x7e\x5c\x74\x6c\xb4\x1c\xa9\xa2\x48\xd9\xf8\x05\x18\x6a\x39\xc3\xec\x49\x70\xf6\xac\x1e\x1c\x29\xce\x1e\xad\x59\x4c\xd6\xfc\x8d\xe7\xb7\x3d\x8b\xc9\x9c\xff\x05\xf6\x5a\xf9\x1f\x08\x7f\x05\x00\x00\xff\xff\x28\xcc\xbc\x42\x69\x04\x00\x00")

func templatesServiceAccountsYamlBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceAccountsYaml,
		"templates/service-accounts.yaml",
	)
}

func templatesServiceAccountsYaml() (*asset, error) {
	bytes, err := templatesServiceAccountsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service-accounts.yaml", size: 1129, mode: os.FileMode(416), modTime: time.Unix(1505432028, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x52\xcd\x6e\xdb\x3c\x10\xbc\xeb\x29\x06\xd6\xe5\xfb\x00\xff\x24\x69\x80\x16\xea\xc9\x75\xd2\x56\x68\x60\x07\x91\xd3\x20\xc7\x35\xb5\x96\x17\xa5\x49\x96\x5c\x47\xf1\xdb\x17\x92\xed\xa2\x41\x7a\x28\x10\xde\x38\x33\x9c\x1d\xee\x6e\xfe\xe6\x93\xe5\x98\xf9\xb0\x8f\xd2\x6c\x14\x17\x67\xe7\xef\xf1\xc5\xfb\xc6\x32\x4a\x67\xc6\x59\x47\xdf\x88\x61\x97\xb8\xc6\xce\xd5\x1c\xa1\x1b\xc6\x34\x90\xd9\xf0\x89\x19\xe2\x3b\xc7\x24\xde\xe1\x62\x7c\x86\xff\x3a\xc1\xe0\x48\x0d\xfe\xff\x98\xe5\xd8\xfb\x1d\xb6\xb4\x87\xf3\x8a\x5d\x62\xe8\x46\x12\xd6\x62\x19\xfc\x6c\x38\x28\xc4\xc1\xf8\x6d\xb0\x42\xce\x30\x5a\xd1\x4d\x5f\xe6\x68\x32\xce\x72\x3c\x1e\x2d\xfc\x4a\x49\x1c\x08\xc6\x87\x3d\xfc\xfa\x4f\x1d\x48\xfb\xc0\xdd\xd9\xa8\x86\x54\x4c\x26\x6d\xdb\x8e\xa9\x4f\x3b\xf6\xb1\x99\xd8\x83\x32\x4d\x6e\xca\xd9\xf5\xbc\xba\x1e\x5d\x8c\xcf\xfa\x37\xf7\xce\x72\x4a\x88\xfc\x73\x27\x91\x6b\xac\xf6\xa0\x10\xac\x18\x5a\x59\x86\xa5\x16\x3e\x82\x9a\xc8\x5c\x43\x7d\x17\xb8\x8d\xa2\xe2\x9a\x21\x92\x5f\x6b\x4b\x91\xb3\x1c\xb5\x24\x8d\xb2\xda\xe9\x8b\x6e\x9d\xe2\x49\x7a\x21\xf0\x0e\xe4\x30\x98\x56\x28\xab\x01\x3e\x4d\xab\xb2\x1a\x66\x39\x1e\xca\xe5\xd7\xc5\xfd\x12\x0f\xd3\xbb\xbb\xe9\x7c\x59\x5e\x57\x58\xdc\x61\xb6\x98\x5f\x95\xcb\x72\x31\xaf\xb0\xf8\x8c\xe9\xfc\x11\xdf\xca\xf9\xd5\x10\x2c\xba\xe1\x08\x7e\x0e\xb1\xcb\xef\x23\xa4\xeb\x23\xd7\x5d\xd3\x2a\xe6\x17\x01\xd6\xfe\x10\x28\x05\x36\xb2\x16\x03\x4b\xae\xd9\x51\xc3\x68\xfc\x13\x47\x27\xae\x41\xe0\xb8\x95\xd4\x4d\x33\x81\x5c\x9d\xe5\xb0\xb2\x15\x25\xed\x91\x57\x9f\x3a\xac\x48\xc5\xf1\x49\x0c\xc3\x90\x92\xf5\x0d\xd2\xe1\xde\x93\x6f\xdf\xd0\x1f\xe2\xea\xe2\x54\x23\xa3\x20\xc7\x75\x2b\xf0\x74\x9e\x6d\x59\xa9\x26\xa5\x22\x03\x1c\x6d\xb9\x38\x15\x1f\x1d\xc3\x8c\x28\xc8\x91\x4b\x81\xcc\x6b\x41\x06\x58\x5a\xb1\x4d\x9d\x05\xba\xb1\xff\xd5\xa3\x83\x38\x66\x5d\xef\x3a\x61\x0e\xdd\x07\x2e\x30\xf7\x35\xdf\xfa\xa8\x19\x90\xd8\xb2\x51\x1f\xff\xc9\x07\x08\x3e\x6a\x5f\x73\xf4\x3b\xb8\xd9\x45\xee\x1f\x87\xe8\xd5\x1b\x6f\x0b\x2c\x67\xb7\x07\xc4\x47\x2d\x70\x79\xf9\xae\xbf\x29\xc5\x86\xf5\xb6\xc7\x3e\x74\x60\xf6\x2b\x00\x00\xff\xff\xdb\x5e\xc8\x70\x0a\x04\x00\x00")

func templatesServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceYaml,
		"templates/service.yaml",
	)
}

func templatesServiceYaml() (*asset, error) {
	bytes, err := templatesServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service.yaml", size: 1034, mode: os.FileMode(416), modTime: time.Unix(1505432028, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTlsCertSecretYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\x4d\x93\xa3\x38\x93\xf8\xef\xf5\x29\x88\xe9\xcb\xff\x1f\x31\xd3\x2d\xc0\xae\x1d\xf7\xc6\x73\x28\xb0\x04\xc6\x85\x5c\x08\xbd\x18\xdd\x04\x62\xcc\x8b\xc0\x14\xa6\xca\x98\x4f\xbf\xe1\xea\x9e\xe7\xd9\x89\xd9\xdb\xee\x61\x23\xb6\x38\x2a\xa5\xcc\x54\x2a\x53\x29\x7e\x5f\xfe\xdb\xdf\xc3\x17\xcb\x3f\x0f\xb7\xb1\x3e\x55\x93\xe5\x00\xfb\xdf\xac\xe0\x7c\x3e\x99\xd2\xda\xf5\xc5\xd7\x87\xbb\xf8\xb9\x2e\xca\xfe\x52\x6a\xeb\xad\xd7\xe5\x68\x4d\x55\x69\x3d\x0d\xaa\xa8\xca\x3f\x25\xbf\x5a\xbc\x1c\x2f\xf5\xb9\xb7\x9c\xaf\xc0\xfa\x7f\xf7\x09\xbf\xfc\x14\xfd\xf2\xff\xff\xfd\xe1\x8b\x75\x3b\xbf\x59\x9d\xba\x59\xfd\x79\xb2\xde\x2e\xa5\x35\x55\xf5\xc5\xfa\xa3\x36\xa5\x55\xce\x45\x39\x4c\x56\xdd\x5b\xc5\xb9\x1b\x4c\xad\xfa\xa2\xb4\xae\xf5\x54\x7d\x98\xf9\xa9\xe4\xeb\xc3\x17\x2b\xfb\xa9\xe2\x9c\x4f\xaa\xee\x2d\x65\x15\xe7\xe1\x66\x9d\xff\xf8\xcf\xf3\x2c\x35\x7d\x38\x7c\xff\xaa\x69\x1a\x2e\xdf\xbf\x7d\xbb\x5e\xaf\x5f\xd5\x87\xb7\x5f\xcf\xe3\xe9\x9b\xf9\x31\xf3\xf2\xed\x79\xe7\x43\x9c\xc2\xdf\x9c\xaf\xe0\x63\x0d\xeb\x4d\x79\xb9\x58\x63\xf9\xfa\x56\x8f\xa5\xb6\xf2\x9b\xa5\x86\xc1\xd4\x85\xca\x4d\x69\x19\x75\xb5\xce\xa3\xa5\x4e\x63\x59\x6a\x6b\x3a\xdf\x1d\xbe\x8e\xf5\x54\xf7\xa7\x5f\xad\xcb\xf9\x8f\xe9\xaa\xc6\xf2\xe1\x8b\xa5\xeb\xcb\x34\xd6\xf9\xdb\xf4\x97\x68\xfd\xe9\x5e\x7d\xf9\xcb\x84\x73\x6f\xa9\xde\xfa\xe5\x29\xb5\x76\xe9\x2f\x96\xf7\x94\xee\xd2\x5f\x1f\xbe\x58\x62\x47\xc3\x03\xa3\x96\x78\x22\xe4\x09\xd3\x1d\x4c\xad\x03\xb1\xfc\x03\xde\xee\xe8\xee\x80\x53\xeb\x80\xac\x27\x9c\x59\xfb\x1d\xde\xfe\x6a\x95\xf5\x54\x95\xa3\x55\xce\xc3\x78\xf7\xff\x3c\x5a\xf5\x3d\x8e\xa5\xbe\x07\x2d\x2d\xcb\xbf\x38\xf0\xc7\xf9\x87\x43\x97\xa1\x2c\xea\x3f\xea\xc2\x32\xaa\x3f\xbd\xa9\x53\x69\x9d\xce\xef\xe5\xd8\xd7\xfd\xc9\x1a\xca\xb1\xab\x2f\xf7\xd3\xbc\x58\xaa\xd7\x0f\x5f\x2c\x53\x77\xf5\xa4\xa6\x8f\x91\xbf\x6d\xea\x47\x8a\xbc\xbc\xe5\xa6\x2e\xbe\xbd\x8c\xf5\xbb\x9a\x4a\xab\x2d\x6f\xd6\xa0\xea\xf1\xc3\xe0\xa5\x1c\xdf\xeb\xa2\xb4\x0a\x35\x29\x73\x3e\x59\x6a\xa8\x3f\xc6\xca\xf1\x57\xeb\x32\x9d\xef\xc1\x56\x97\x87\x2f\xd6\xa5\x2c\xc6\x72\xfa\x6a\xb1\xcb\x8f\x10\x5f\xca\xe2\x6d\x2c\xcd\xed\x9e\x19\xdd\x5b\x5f\x17\x77\xcd\xff\x4c\x8d\x4e\xd5\xfd\x37\x75\x3a\x8d\xe5\x49\xdd\x83\xa9\x86\xfa\x43\xc7\x5d\xef\xcf\xb4\x4d\xc1\xf4\x9c\xda\x3e\x61\x3a\xa2\xb5\xb7\x25\x3c\x62\x29\x93\x51\x02\x10\x23\x1f\x32\x30\xf9\xad\x1d\xa5\x8c\xd8\x1c\xe2\x6d\x72\x44\xa1\x04\xc8\x4d\x59\xe4\x49\x60\x78\xd6\x47\xe1\xf3\x52\xad\xb3\xe5\xe9\x86\x99\x0d\x99\xcb\xdf\xf1\x82\x95\x62\xcc\x66\xed\xa6\x52\x0b\x8f\x34\x20\x44\xb0\xe1\x39\xb7\x87\x48\x85\xb2\xa1\x2d\x22\x84\x5d\xf7\x89\x41\x9e\xb6\xf9\x2b\x61\x33\x4e\xc4\x14\x26\x14\x71\xc2\xa2\x33\x65\x58\xf0\xd6\x5e\x91\xe3\xe0\xb1\x36\xea\xa9\x91\x7e\x22\x34\x4b\x9c\xe9\xa0\x82\x28\xcc\x03\xbb\x8e\xc1\x60\x67\x5c\xa3\x12\x72\x96\x70\xcf\x97\x60\x2d\x92\x16\x35\xfc\x69\xd8\xa6\x70\x7d\xce\x3a\xe3\x17\x62\xb7\xd0\x6e\xc6\x8c\x7a\x6e\xe2\x6a\x49\x90\x24\x8c\x4d\x48\xdb\xd1\x4d\x22\xbd\xcf\xa1\x4d\xb4\xab\xb7\xd2\x36\x90\x1b\x44\x28\xe4\x2e\x35\x95\x88\x05\x76\xd3\xa0\x6a\x68\x6b\xb3\xcc\xd5\x2f\x1c\xb2\xab\xdf\xda\xaf\xc9\x51\x63\xd5\x22\x97\x3b\x1f\xb2\xd7\xf4\x78\x97\xf1\x47\x2a\x06\x4f\x83\x0f\xf9\x51\xb5\xc8\x50\x1e\xb9\x1a\xe8\x5e\x30\x22\x18\x47\x90\x1c\xab\x43\x69\x86\x2c\x6d\xa2\x8a\x83\xf5\x85\x22\x7d\x50\x01\x09\x49\x1f\xef\xb3\x26\x6a\x34\x32\x59\xd2\x7b\x38\x65\xc6\x4f\xc5\xe0\xd1\x36\xea\x95\x8b\xce\xca\x31\xe1\xe1\x58\x5c\x93\x8f\x78\x49\x2f\x61\x9b\x6d\xc2\xe1\x2a\x61\xf7\xf3\x88\xb6\x12\x4c\xdb\x84\x23\x94\x1c\x63\xa0\x5c\xec\x6b\x1e\xc5\x1c\x46\x37\x95\x0c\x5e\x7c\x3c\x8f\xb8\x43\x7e\xee\x20\x93\xb9\x43\x9c\x36\x88\x66\x2d\x1f\x71\xc3\x6c\xe9\x90\x54\xdb\x43\xa8\xc4\x19\x60\x47\x3f\x32\x67\x92\x3a\xdd\x38\x09\x8b\x46\x79\x8c\x5d\xe2\xf0\x34\x0e\xe6\x7d\xd9\xc8\x23\x16\xf0\xc6\xba\x28\xcd\x83\xc2\xf5\xbb\xe9\x4a\xc1\x00\x8a\x5e\xae\x73\xb1\x69\x39\x45\xe7\x14\xca\x17\xbd\x98\x5a\x18\xef\x39\x3d\x0e\x0d\x61\xd5\x6b\xda\x70\x44\x5a\x32\x25\xc2\x5c\x33\x53\xf9\x71\x5f\x00\x76\xac\xf0\x5d\x8f\x3a\xb6\x57\xd5\x18\x2c\xea\x69\xe4\x8c\xdf\x98\x73\xd9\x53\x68\x57\x52\xcc\x8d\x08\xbd\x1a\xa3\xd3\x2a\x45\xad\x2b\xba\x79\x27\xda\xb3\xcb\x7b\x72\x48\x5b\x74\x2c\xb6\x58\xe4\xe0\x7c\xa3\xce\xc6\x8d\x21\xf2\x08\x9b\xa5\x34\x0c\x3c\xdb\x52\x90\x80\xd4\xa2\x3b\xaf\x9f\x9d\x75\x4c\xfb\x27\x57\x51\x19\x90\xa7\x21\x22\x66\x78\x61\x60\xc3\x48\x30\x38\x85\xb3\xce\xb0\x41\xbe\xee\x4d\x58\x50\x0e\xa4\xd0\x5b\xd9\xf1\xf3\x1e\xd8\x93\x02\xbb\xf7\x42\x4c\x61\x1c\xf0\x31\xa7\xe4\xca\xc3\x2a\xc0\xa1\xe7\x67\x0d\x7f\x64\x82\xdf\x64\xcf\xfd\xcc\x21\x47\x0d\xf8\xe8\xb7\xd1\x3a\x01\xd1\x39\xb1\x07\x24\x8f\x27\xc0\x8e\x78\x2c\xdc\xe4\xca\x10\xc7\x05\xd8\xcd\x29\xc7\x2a\xe9\xab\x60\xef\x30\x40\x03\xc4\xd8\xd1\x03\x65\x3d\x85\x45\xb0\x7e\x8c\x5d\x4e\x73\x5b\xef\x45\x03\xdf\x69\x88\x57\xb2\xab\x1c\xba\x78\x67\x1e\xc0\xfd\x21\x90\xa9\x82\x76\x8f\x85\xbd\xd7\xc0\xc0\x84\x23\x2f\xe9\x7e\x07\x64\x91\x38\x65\xc5\x42\x19\x04\x04\xc0\x99\x0b\x02\x35\xe0\xfe\xb3\xab\x09\x61\xf7\x3a\x94\xef\x04\x22\x9c\x74\xfa\xc0\xdb\x2a\xa5\xf7\xba\x6c\x2a\x94\x88\xc1\x4b\x92\x01\x27\x8d\xf7\x51\x57\x12\x92\x9e\x71\xed\x27\x06\xce\x85\xf8\xdd\x4d\x6d\xe6\x72\x38\x4f\x31\xd4\xeb\xd8\xb1\x77\x3c\xa8\x54\x7e\x44\xbc\x0c\x0c\x28\x0d\xf1\xe4\x8f\xba\xdb\x31\x60\x23\x02\x88\xc7\x1d\xed\x33\x30\x87\x84\x65\xf7\x5a\xe0\x05\xc3\x6e\x4c\xa5\x1b\x37\xe6\x4d\x0b\xd9\x53\x7f\xb3\x52\xbc\x18\x45\x37\xf8\x02\xfe\x5c\xdb\x72\xc4\x19\xf1\xa9\xa3\x07\xda\x0f\x4a\xc0\xf3\x2d\xe3\xfa\x90\xc3\xf9\x48\xbb\xaa\x25\x40\x2e\xff\xca\xff\xa7\x3d\x0d\xd6\x87\x3c\xc0\x6f\xa2\xf7\x64\x6c\x38\x10\x34\x0a\x62\x64\x8e\x65\x28\x15\x86\xe6\x2d\x5b\x22\x51\x0a\x32\xe5\xc1\xa0\xd8\x82\x5e\x05\xaf\xd2\xfb\x7d\x70\x10\xeb\x98\x03\xe9\x66\x3c\xb6\xff\x56\x67\x4f\xc3\xbf\xec\x88\x78\x11\xdd\x80\x13\xea\x85\x89\x8d\x67\x62\xe3\x28\x6b\x30\x64\x8c\xfb\x89\xab\x79\xc2\x20\xb8\xdf\x6b\x8c\x21\x2f\x05\x5c\x8a\xe0\xea\xc6\xc8\xac\x95\xb3\xc9\x28\x8f\xb6\xca\xd6\x30\x86\x72\xca\x99\x1d\xfb\xdd\x79\x95\x31\x9e\x30\x60\xbf\x1e\x38\xa2\x18\xcc\x2e\x41\x99\x43\xe0\x26\x2d\x43\x92\xaa\xad\x01\x14\x55\xd7\xb4\xfd\xdd\x65\xc1\xee\x2a\xc3\xe8\xad\xe4\xc9\x0a\x0b\x6d\x4b\x1b\xaf\x35\x9b\x9b\x18\x44\x01\x0b\xf9\x2a\x77\xb0\xc7\x7b\x4e\xd4\xf6\x69\xaf\x01\x6e\xd2\x80\x34\x79\xa0\x1b\xdd\xeb\x89\x70\x29\x04\x42\x41\x06\xc8\x39\x31\x03\xcd\x18\xea\x4b\xce\x00\x69\xcc\x56\x77\xd3\x58\xf6\xa7\xb9\x0c\x06\x47\x02\xc4\x4b\x44\x5e\xa4\xb8\x2c\xd9\x31\xe2\x74\x79\x1a\x69\xa8\xd3\x3d\x88\x97\xfc\x34\xec\xd3\x2d\x92\xc5\xe2\xc9\x4c\x9c\x6d\x45\x49\xf5\x0c\xc8\x2a\x0f\xf0\x31\x77\x50\x26\x17\x9e\xca\xd6\xd4\x39\x1b\x6c\xcd\x33\xbb\xd8\x7a\xbb\xb8\xb5\xc7\x12\xca\x73\xbe\x95\x53\x01\x76\xd7\x67\x67\xc8\xa4\x63\x22\xbe\xdd\xcd\x04\x4e\x6d\x99\x4e\x9e\xdf\x56\x75\x8c\x4e\xb3\x82\x83\x28\x3a\x4c\x09\xc0\x33\x33\xbb\x25\x13\x43\x47\xfc\xcd\xad\x00\xe8\x2d\xdd\x46\x5d\xc2\xda\x31\x46\xc5\xc8\x39\x8e\xa4\x4b\x82\x34\x38\x39\x24\x44\x6f\x69\x50\xbc\x53\x38\xd8\xcf\x2e\xba\x1d\x02\x1b\xd0\x45\x1e\xb5\x28\xf6\x31\xdb\xb4\x84\x6d\x66\x6c\x93\x94\x99\xe1\x9c\x23\x0e\xe5\xf6\xe9\xb6\x07\x60\x4e\xe1\xf0\x5e\x36\xb2\xa2\x2e\x79\x15\x30\x5e\x0a\xc3\x47\x0d\x57\xf7\x3c\xf4\x04\x8b\x96\x32\xa8\xda\xb2\xb5\xcf\x39\xf7\xdc\xa4\xb3\x79\x26\xf8\xd1\xaf\x7f\xf4\x31\xc2\xd6\x70\x07\x31\x62\x86\x44\xa4\x35\xdb\x84\x13\xf4\xa3\xff\x81\xfd\xf7\xbf\x75\xe0\xe1\xa3\x5b\xdf\xbb\xf4\xdf\xdb\x64\xca\x00\x3c\x31\x14\x45\xbc\xbd\xb7\x49\xef\x99\xf0\xf6\xc3\xc4\x73\x32\xdc\xaf\x71\x94\xbb\x3a\x4a\xda\x7b\x1a\x61\x8f\x31\xee\x15\x0b\x19\x0b\x10\xd9\xac\x9d\x59\xd2\x47\x43\x42\xd1\xe3\x7e\x91\x55\xd2\x6d\x2a\x29\xf0\x23\x85\xe7\x99\x39\x11\x52\x4b\x66\x63\xa1\x5b\xd6\x6b\x45\x1c\xf3\x8a\xb7\xba\x2f\x0d\x1e\x7d\x63\xec\x67\x57\x7a\x49\x37\x99\x62\xd1\xa1\xe4\xbb\x6b\x0e\x87\x47\x6c\x0a\x3b\xa3\x51\x9a\x99\xe8\x22\x17\x3d\x16\x70\xb3\xd7\x61\xe4\x94\xc2\x7e\x97\x88\xcd\x0a\x56\x01\x75\x8b\x75\x66\x86\x24\x05\xe6\x31\x03\x7c\xa7\xda\xb3\x4d\x98\x84\x39\x83\x7b\x75\xf4\x6a\x01\x77\x37\xbd\x10\x52\x42\xfb\xae\x67\x28\xa9\xf7\x7a\x60\xb6\xda\x3b\x13\x27\xc7\x88\x2a\x30\xe3\x4c\xf0\x4b\x66\x57\xd7\xac\x21\xd9\x01\x56\x12\xdb\xc3\x25\x45\xc3\x1e\xdb\x12\xd0\x76\xf0\xb8\xfb\xb4\xf0\x6e\xb3\x8f\xdb\xcd\xbb\xbe\x9e\xaf\x09\x43\x88\x22\xd3\x71\x9a\xbc\x73\x23\xa1\x0c\x22\xa5\x9a\xf6\x3d\x6f\xe7\x43\xb1\xd5\x03\x6e\x25\x4c\x99\x54\xd4\xc6\x2f\x1c\x92\x57\xdd\xe3\x37\xb1\x95\x24\xe9\xe5\x9a\xb8\xd0\xd6\x01\xef\x13\x47\x1a\xe5\x4f\x38\x17\x93\xff\xec\xa2\xd1\x6f\x8b\xab\x14\xd3\x84\x43\x8f\x95\x30\x03\x05\x8c\x6a\x7c\x1c\x88\x3c\x46\x9d\x66\x51\x23\x91\x76\x89\x98\xfc\x92\x61\x5f\x41\xac\x88\xe0\x2b\x8c\xd0\xa2\x5c\x0c\x62\xe4\x71\x7a\xc4\x7e\xcc\x0c\x15\x6d\xb4\x22\xf5\x64\x30\x9c\x2b\x8e\xe0\xbe\x08\xc9\xe3\x1e\xe8\x6b\xde\x9f\x17\xcd\xf1\x3b\x07\x83\x8a\xd3\x4d\x5c\xb8\x55\xa7\x42\xf9\x12\x07\x15\xcb\x68\xd5\xb1\xae\xc2\x72\xe1\x53\xda\xeb\x88\x40\x44\x12\x16\x79\x39\x30\x7e\xc2\xa2\xb7\xa2\x45\xef\x31\x32\x7b\xd9\xa3\x36\x77\x39\x57\xa7\x41\x15\x46\x5e\xb3\xa6\xba\x28\x26\x7d\x76\x8c\x1c\xd9\x93\xf6\x10\x66\xef\x7b\x80\x63\xb6\xe5\x7b\x6d\x3c\x4c\x1c\x13\xd0\x06\x3d\x92\x6e\x7e\x39\x08\xb4\x2d\x05\x79\x95\x50\x4f\xa4\xb3\xf7\x6a\x2b\x5d\x6c\xbc\xb5\x5a\xf8\x63\x89\xaa\x2e\xef\x36\x67\xbf\x1b\x42\xec\x7e\xb4\x9d\x1d\x86\xfa\x5a\x50\x13\x50\x11\x1d\x63\x20\x5f\x58\xa7\x6d\x0e\xd0\xa3\xd8\x56\x6f\x7a\x41\xbd\xa0\x7a\x91\xac\xca\x0a\x1a\xcf\x07\xb8\x76\x52\xc8\x93\xdc\x59\x9b\x84\xeb\x84\x87\xa7\xf1\x19\xe8\x24\xa3\xf2\x5c\x32\xb8\x2f\xd2\x29\x2a\x10\x4e\x29\x5c\x77\x7b\x40\x5c\xd9\x40\x27\xb3\x75\x12\x03\xe3\x09\x58\x0d\xf1\x36\x72\xe4\x16\xbd\xe7\x61\x14\x1d\x78\xe2\x68\xc6\x09\xef\x4d\x84\x43\x32\x32\x20\x0f\xb2\x91\x7e\xc6\x88\x2b\xa0\x7d\xd5\x4e\xe5\xab\x23\xf6\xc9\xd3\xe0\xe5\x7d\xa4\xd8\xc2\x2f\x5a\xd8\x52\x1a\x09\x4a\xe4\x75\x92\x1b\x45\xb7\x68\x47\xdb\x69\x4f\x81\xec\xca\xa6\x62\x07\x28\xb7\xf9\x56\xbe\x52\x01\x56\x7a\x1b\x4d\x89\xd0\x37\xd5\xcd\x18\xdb\x44\xaa\x80\x0b\xe6\xcc\xfb\x18\x10\x54\xb0\x1d\xf0\x7b\xde\xc9\x26\xc2\x04\x9d\xe6\x8c\x66\x37\xc1\x77\xb7\x18\xda\xef\xe4\x36\x55\x05\x45\x0d\x77\xa6\x17\xe5\xff\x3e\xa7\xd4\xac\xf3\xa5\x5a\xc7\xb4\xaa\x0b\x58\x45\xb1\x33\xdc\x62\x3e\xa0\x54\xec\x1c\xbe\x98\x39\x36\x55\x9a\x52\x42\x28\x97\x6b\xbe\x85\x7b\xc1\xd0\xa1\x38\x62\x43\x18\xee\x05\xe3\x1e\xee\x51\x98\x87\xe8\x56\xf6\xec\x3d\x5d\xa2\x66\x6f\xa3\x85\xd2\x76\xc5\x4d\x84\x04\x45\xcf\x07\xb1\xd9\xb3\x60\xea\xca\x5e\x36\x71\x8b\xea\xac\xe7\x2b\x1e\x44\x3c\x67\xf6\xb6\x44\xc3\x11\x0b\x8c\xb3\xd3\x70\x2c\xc0\xbc\x1c\x58\xb2\x2e\x9c\xe9\x76\xe0\xde\x0a\xbb\xd1\x4b\x66\x4b\x2a\xb8\x34\x79\x98\x81\x12\xea\x49\x81\x61\x60\xce\x6c\x8a\xd6\x3e\xd0\xa6\xbd\x95\x88\x38\xaa\xe1\xa8\x44\x08\x26\x47\x6d\xef\x81\xad\xe2\x45\xbe\x62\x9b\x3c\xd3\x90\x6f\xfd\xb6\x6a\x31\x88\x5a\xb9\xc5\x6f\x82\xf3\xfa\xb0\x45\x09\xa7\x68\xa2\x5b\x6d\xb2\x85\x44\xb2\x1d\x44\xee\xe0\x24\x45\xf1\xac\x5c\x54\x91\x7e\x68\xf5\xb1\xaa\xe5\xb1\x92\x38\xac\x9c\xb8\x41\x71\xec\xac\xb3\xb2\xc3\xf7\xe7\x2f\x4a\x8e\xc5\x48\xb7\xed\x9e\x75\x88\xab\x86\x18\x0e\xa7\x84\xb8\xdc\x2f\x3b\x29\x68\x0b\x5d\x1d\x92\x03\x3f\x7a\x87\x03\xe3\x2a\x6f\xe4\x50\xc0\xcd\x8b\xa4\x44\x12\xe7\xba\x22\xce\xef\x20\x77\x39\x39\x1c\xbd\x58\x76\x28\xc4\x9d\x1d\x70\x2a\x5f\x73\x44\xb6\x62\xcb\x83\x34\x19\xaa\x02\xf1\x29\x01\xf2\x51\xf7\x66\xe1\x1c\xbd\xa5\x86\x37\x79\x70\x9d\x25\x5c\x1f\xd4\x82\x9a\xa4\x3f\xcf\x2c\x94\x2e\xf1\x37\xa3\xea\x50\x26\xcc\x50\x49\x3b\x9e\x31\x82\x57\x05\x89\xc2\xb6\xb4\xe5\x16\x3b\xac\x2d\xdc\x03\x8b\x14\xa1\x15\xf6\xfb\xca\x88\x96\xbd\xf3\xa6\x32\xca\x19\x16\xc1\x66\x46\x99\x4e\x28\x9b\x64\x4e\xcd\x85\x38\xed\xb5\x68\xcc\xcc\xdc\x78\x55\xd6\xd3\x0b\xb7\xf1\xfe\xc7\xd9\x46\x42\x22\x52\xcb\x46\xaf\x4a\x31\xbd\xe2\x74\xda\xc6\x0e\x09\x89\x91\xb4\xe8\x56\xfb\x98\xca\x75\x06\x70\x88\x8f\x6c\x39\x6c\x4d\x47\x40\xe5\xe6\x01\xd9\xa7\x5c\x0b\x15\xcc\x2a\x6e\x2b\xac\x18\x0f\x99\xd0\x87\xd4\xc5\x22\x73\xab\x55\x26\xe4\xfc\x6c\x63\xcc\x9d\x4d\xac\x6d\x1c\xb1\xdb\x14\xa9\x25\x82\x1c\x16\x6e\xd1\xce\x55\xfa\x34\x90\xc4\x78\x38\x0f\xda\x51\xb3\x0d\x90\x36\xa2\x0c\xae\xc3\x18\x46\xa8\xec\xa3\xb5\x08\x4f\xef\xa2\x97\x0e\x6f\xd1\x2a\xe3\x1c\xc7\xee\xd3\xa2\x1a\x6d\xa7\x5c\xdf\x0a\x38\xd7\xb8\x27\x76\x26\x08\xa1\x21\x73\x72\x38\x0f\x34\xb0\x67\xc5\x36\xc4\x6f\xab\x1d\x45\xc4\x91\x41\xb4\x10\xd6\xae\x63\x87\xc7\xe9\x96\x64\xb9\x8b\x00\x31\xe8\x39\xe9\x34\x49\xec\xd6\x49\x3b\x00\x98\x48\x1c\x7d\xe4\xc9\x7e\x31\x7e\x1e\xc0\x77\x66\xa2\x39\x6f\x67\x9a\x07\xd3\xab\x14\x9b\xf7\xf4\x88\xc5\x33\xa8\xd6\x94\xad\xf6\xcc\xae\x52\x0c\xec\x23\x16\xeb\xa4\xe8\x0a\xa7\x70\x5b\x3b\xee\x66\x9e\x1d\xbd\x9d\xa6\x72\x2c\x18\xb9\xa4\xce\x10\x49\xb7\xb8\xe9\xa0\x7a\xcd\x5c\x32\x28\xb0\xe9\xcb\x30\x7a\xcd\xd9\x40\x44\x27\x79\xc6\xb0\xd1\x76\x6c\x2b\x21\xd7\x31\x1c\x6e\x71\x32\x28\xd5\x3c\xbd\x13\xb8\x7e\x3c\xb0\xb5\x90\x70\xe8\x14\x93\x49\xcc\xf5\x5c\xf6\xc3\x14\xfb\x97\x95\x68\x34\x4a\x5a\xf3\x7a\x48\xa7\xb7\x44\x4c\x38\xed\x36\xc7\x1c\x44\x15\x33\xc8\x90\x74\x1a\x69\x1b\xbb\x98\xe2\x90\x85\xc3\xa0\x6d\x94\x3d\xdb\xe6\xd9\xef\x78\x25\xb9\x91\x8c\x4d\xbe\x04\x51\x2f\xba\x9d\x93\x1f\xdb\x55\xde\x61\x98\x6f\x23\xf2\xec\x98\x48\x01\xfd\x4c\xb6\xb8\x4f\xc5\x6a\x95\x98\xd8\xc5\x6d\x01\x70\x0b\xe6\xd8\x21\x51\x0e\xa3\x6b\xce\x32\xc0\x7a\xdd\xc9\x05\xd5\x87\x10\x31\x09\x2e\x7b\xc6\x23\x51\x30\xbc\xc4\x08\x2e\x0c\xae\x5d\xe9\x9c\xae\x09\xad\xa0\xe2\x1e\xa0\xc1\xf4\x1a\xdb\x32\xcc\x1b\xde\xc5\x8d\x56\xb1\xb8\xac\xb4\x98\x55\xe2\xea\x59\xf3\x6c\x9d\x09\xd4\xa6\x0d\x1e\x53\xda\x8e\xda\xc5\x4e\xce\xf5\x2e\x69\xa3\x83\x48\x06\xa5\x9b\xe8\x4a\x99\x59\x93\x25\xba\x62\x51\x35\xb2\xaf\x60\x01\x77\xcb\x81\x7b\x87\xf2\xf8\x04\xd2\x6e\x67\x33\x5b\x5f\xa9\xb3\x4e\xa5\x41\x49\xea\x4c\x4a\x86\x7c\x85\xe1\xf4\x92\xb0\x2a\x49\x85\x1c\xfe\xf2\xa4\x41\x11\x4d\x52\x2f\x61\xad\x11\xf7\x27\xcd\x0e\x4e\x48\xfc\xf9\xeb\x7e\xfa\xc7\x3f\xfe\x8b\xa7\xcd\xbf\x08\xc4\xc3\x97\x87\xff\x01\x3a\xa6\x86\xfa\x27\xdc\xfa\x6e\xbd\xdb\x0f\x6d\xdd\xeb\xef\x56\xfa\x81\x2a\x1e\xa6\xdb\x50\x7e\xb7\xda\xb7\xbc\x1c\xfb\x72\x2a\x2f\x5f\xeb\xf3\xb7\xc9\x5c\x1e\xba\x72\x52\x5a\x4d\xea\xfb\x83\x65\xf5\xaa\x2b\xbf\x5b\x6a\xa8\x7f\xa0\x89\xdf\x8a\x72\x9c\x7e\x0e\x5f\x06\x55\x94\xff\xdc\xc2\x6f\x3f\xb7\xf0\x60\x59\x46\xe5\xa5\xb9\xdc\x57\x5b\x96\x1a\x86\xbf\x4d\xf9\xed\x9f\xea\x7e\xba\x70\x18\xd4\xeb\x5b\xf9\xf0\xa7\xcd\xc9\x5c\xbe\x16\xe3\xf4\xfd\x13\x81\x7c\x22\x90\x4f\x04\xf2\x89\x40\x3e\x11\xc8\x27\x02\xf9\x3f\x8d\x40\x7e\xf6\xc4\xb6\xbc\xfd\xad\x27\x7e\xf2\x8e\x4f\xde\xf1\xc9\x3b\x3e\x79\xc7\x27\xef\xf8\xe4\x1d\x9f\xbc\xe3\x93\x77\xfc\xaf\xe6\x1d\x0f\xff\x11\x00\x00\xff\xff\xe6\x89\xe7\xf5\xef\x23\x00\x00")

func templatesTlsCertSecretYamlBytes() ([]byte, error) {
	return bindataRead(
		_templatesTlsCertSecretYaml,
		"templates/tls-cert-secret.yaml",
	)
}

func templatesTlsCertSecretYaml() (*asset, error) {
	bytes, err := templatesTlsCertSecretYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/tls-cert-secret.yaml", size: 9199, mode: os.FileMode(416), modTime: time.Unix(1505432028, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTlsCertSecretYamlTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\x41\x6f\xdb\x38\x14\x84\xef\xfa\x15\x83\xe8\xb2\x0b\x38\x72\x9a\xcb\x02\xda\x93\xeb\x7a\x77\x85\x06\x76\x10\x39\x29\x72\x2a\x9e\xa9\x67\xf9\x21\x14\xc9\x92\x54\x5c\xa1\xe8\x7f\x5f\x50\x56\xd2\x1a\x41\x4f\xd5\x91\x1c\x0e\xbf\x19\x3d\xe6\xbf\xfd\x65\x39\x96\xd6\x0d\x5e\xda\x43\xc4\xf5\xd5\xbb\xbf\xf0\xaf\xb5\xad\x66\x54\x46\x15\x59\xda\xbe\x11\xc5\x26\x70\x83\xde\x34\xec\x11\x0f\x8c\x85\x23\x75\xe0\x97\x9d\x19\x1e\xd8\x07\xb1\x06\xd7\xc5\x15\xfe\x48\x82\x8b\x69\xeb\xe2\xcf\xbf\xb3\x1c\x83\xed\xd1\xd1\x00\x63\x23\xfa\xc0\x88\x07\x09\xd8\x8b\x66\xf0\x57\xc5\x2e\x42\x0c\x94\xed\x9c\x16\x32\x8a\x71\x94\x78\x18\xaf\x99\x4c\x8a\x2c\xc7\xe3\x64\x61\x77\x91\xc4\x80\xa0\xac\x1b\x60\xf7\x3f\xeb\x40\x71\x04\x4e\xdf\x21\x46\x17\xca\xf9\xfc\x78\x3c\x16\x34\xd2\x16\xd6\xb7\x73\x7d\x52\x86\xf9\x4d\xb5\x5c\xad\xeb\xd5\xe5\x75\x71\x35\x9e\xb9\x37\x9a\x43\x80\xe7\x2f\xbd\x78\x6e\xb0\x1b\x40\xce\x69\x51\xb4\xd3\x0c\x4d\x47\x58\x0f\x6a\x3d\x73\x83\x68\x13\xf0\xd1\x4b\x14\xd3\xce\x10\xec\x3e\x1e\xc9\x73\x96\xa3\x91\x10\xbd\xec\xfa\x78\xd6\xd6\x0b\x9e\x84\x33\x81\x35\x20\x83\x8b\x45\x8d\xaa\xbe\xc0\xfb\x45\x5d\xd5\xb3\x2c\xc7\xa7\x6a\xfb\xdf\xe6\x7e\x8b\x4f\x8b\xbb\xbb\xc5\x7a\x5b\xad\x6a\x6c\xee\xb0\xdc\xac\x3f\x54\xdb\x6a\xb3\xae\xb1\xf9\x07\x8b\xf5\x23\x3e\x56\xeb\x0f\x33\xb0\xc4\x03\x7b\xf0\x57\xe7\x13\xbf\xf5\x90\xd4\x23\x37\xa9\xb4\x9a\xf9\x0c\x60\x6f\x4f\x40\xc1\xb1\x92\xbd\x28\x68\x32\x6d\x4f\x2d\xa3\xb5\xcf\xec\x8d\x98\x16\x8e\x7d\x27\x21\xfd\xcd\x00\x32\x4d\x96\x43\x4b\x27\x91\xe2\xb8\xf2\x26\xd4\x69\x44\x6e\xfb\x9d\x16\x35\xbf\xf5\xf2\x4c\x91\xf1\xc4\x03\x1c\x89\x1f\x2f\x0c\xec\x9f\x45\x31\x14\x45\xd2\xb6\x05\x39\x19\xd7\xd8\xcf\x10\xa2\x4d\x65\x53\xc8\x72\x04\x56\x9e\x63\x81\xfb\x70\xaa\x38\xb0\xea\x3d\xeb\x21\x4d\x46\xd7\x1b\x51\xc9\xf9\x75\x34\x3a\x12\x33\xa7\xb6\xf5\xdc\x52\x2a\x93\x9c\x8c\x1e\xc9\xf7\xc4\x54\x3f\x2c\x3f\xdf\xde\xbf\xbf\xa9\x96\x9f\x3f\xae\x1e\xcb\x37\x1c\x6e\x64\x4e\xac\x2f\xe2\xbb\xea\x61\xb1\x5d\xfd\x42\xfd\x23\x5a\x72\xff\xfd\x67\x47\x4e\xa6\x57\x53\xe2\xf9\x5d\xf6\x24\xa6\x29\x51\x8f\x1d\x64\x71\x70\x5c\xe2\xa9\xdf\xb1\x37\x1c\x39\x14\x62\xe7\x51\x87\xac\xe3\x48\x0d\x45\x2a\x33\xc0\x50\xc7\x65\x8a\x7d\xca\x7c\xa9\xd8\xc7\x69\x39\x38\x52\xfc\x1a\xe1\x72\x8a\x90\x01\x9a\x76\xac\x43\x3a\x8d\x34\xdd\x6f\x24\x97\xaf\x76\x13\xc2\xc6\xd1\x97\x9e\xb3\x97\x3b\xa3\x0e\x85\xf2\xb1\xc4\xb7\x6f\x28\xce\xfb\xc5\xf7\xef\x93\xe0\x89\x87\x9f\x04\x3f\x3a\x4d\x8a\xff\x03\x00\x00\xff\xff\x81\x27\x2f\xfa\xaf\x04\x00\x00")

func templatesTlsCertSecretYamlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesTlsCertSecretYamlTmpl,
		"templates/tls-cert-secret.yaml.tmpl",
	)
}

func templatesTlsCertSecretYamlTmpl() (*asset, error) {
	bytes, err := templatesTlsCertSecretYamlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/tls-cert-secret.yaml.tmpl", size: 1199, mode: os.FileMode(416), modTime: time.Unix(1505520926, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/api-registration.yaml": templatesApiRegistrationYaml,
	"templates/api-registration.yaml.tmpl": templatesApiRegistrationYamlTmpl,
	"templates/apiserver-deployment.yaml": templatesApiserverDeploymentYaml,
	"templates/ca_config.json": templatesCa_configJson,
	"templates/ca_csr.json.tmpl": templatesCa_csrJsonTmpl,
	"templates/controller-manager-deployment.yaml": templatesControllerManagerDeploymentYaml,
	"templates/etcd-svc.yaml": templatesEtcdSvcYaml,
	"templates/etcd.yaml": templatesEtcdYaml,
	"templates/gencert_config.json.tmpl": templatesGencert_configJsonTmpl,
	"templates/namespace.yaml": templatesNamespaceYaml,
	"templates/rbac.yaml": templatesRbacYaml,
	"templates/service-accounts.yaml": templatesServiceAccountsYaml,
	"templates/service.yaml": templatesServiceYaml,
	"templates/tls-cert-secret.yaml": templatesTlsCertSecretYaml,
	"templates/tls-cert-secret.yaml.tmpl": templatesTlsCertSecretYamlTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"api-registration.yaml": &bintree{templatesApiRegistrationYaml, map[string]*bintree{}},
		"api-registration.yaml.tmpl": &bintree{templatesApiRegistrationYamlTmpl, map[string]*bintree{}},
		"apiserver-deployment.yaml": &bintree{templatesApiserverDeploymentYaml, map[string]*bintree{}},
		"ca_config.json": &bintree{templatesCa_configJson, map[string]*bintree{}},
		"ca_csr.json.tmpl": &bintree{templatesCa_csrJsonTmpl, map[string]*bintree{}},
		"controller-manager-deployment.yaml": &bintree{templatesControllerManagerDeploymentYaml, map[string]*bintree{}},
		"etcd-svc.yaml": &bintree{templatesEtcdSvcYaml, map[string]*bintree{}},
		"etcd.yaml": &bintree{templatesEtcdYaml, map[string]*bintree{}},
		"gencert_config.json.tmpl": &bintree{templatesGencert_configJsonTmpl, map[string]*bintree{}},
		"namespace.yaml": &bintree{templatesNamespaceYaml, map[string]*bintree{}},
		"rbac.yaml": &bintree{templatesRbacYaml, map[string]*bintree{}},
		"service-accounts.yaml": &bintree{templatesServiceAccountsYaml, map[string]*bintree{}},
		"service.yaml": &bintree{templatesServiceYaml, map[string]*bintree{}},
		"tls-cert-secret.yaml": &bintree{templatesTlsCertSecretYaml, map[string]*bintree{}},
		"tls-cert-secret.yaml.tmpl": &bintree{templatesTlsCertSecretYamlTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

